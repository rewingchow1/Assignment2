// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int conv_layer::C_S_AXI_DATA_WIDTH = "100000";
const int conv_layer::C_S_AXI_WSTRB_WIDTH = "100";
const int conv_layer::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic conv_layer::ap_const_logic_1 = sc_dt::Log_1;
const int conv_layer::C_M_AXI_MEM_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int conv_layer::C_M_AXI_MEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int conv_layer::C_M_AXI_MEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int conv_layer::C_M_AXI_MEM_CACHE_VALUE = "11";
const int conv_layer::C_M_AXI_ID_WIDTH = "1";
const int conv_layer::C_M_AXI_ADDR_WIDTH = "1000000";
const int conv_layer::C_M_AXI_DATA_WIDTH = "100000";
const int conv_layer::C_M_AXI_WSTRB_WIDTH = "100";
const int conv_layer::C_M_AXI_AWUSER_WIDTH = "1";
const int conv_layer::C_M_AXI_ARUSER_WIDTH = "1";
const int conv_layer::C_M_AXI_WUSER_WIDTH = "1";
const int conv_layer::C_M_AXI_RUSER_WIDTH = "1";
const int conv_layer::C_M_AXI_BUSER_WIDTH = "1";
const sc_logic conv_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> conv_layer::ap_const_lv2_0 = "00";
const sc_lv<2> conv_layer::ap_const_lv2_1 = "1";
const bool conv_layer::ap_const_boolean_1 = true;

conv_layer::conv_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv_layer_CTRL_BUS_s_axi_U = new conv_layer_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("conv_layer_CTRL_BUS_s_axi_U");
    conv_layer_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    conv_layer_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    conv_layer_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    conv_layer_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    conv_layer_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    conv_layer_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    conv_layer_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    conv_layer_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    conv_layer_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    conv_layer_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    conv_layer_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    conv_layer_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    conv_layer_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    conv_layer_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    conv_layer_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    conv_layer_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    conv_layer_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    conv_layer_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    conv_layer_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    conv_layer_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    conv_layer_CTRL_BUS_s_axi_U->ap_start(ap_start);
    conv_layer_CTRL_BUS_s_axi_U->interrupt(interrupt);
    conv_layer_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    conv_layer_CTRL_BUS_s_axi_U->ap_done(ap_done);
    conv_layer_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    conv_layer_CTRL_BUS_s_axi_U->input_offset(input_offset);
    conv_layer_CTRL_BUS_s_axi_U->output_offset(output_offset);
    conv_layer_CTRL_BUS_s_axi_U->b(b);
    conv_layer_CTRL_BUS_s_axi_U->od(od);
    conv_layer_CTRL_BUS_s_axi_U->ox(ox);
    conv_layer_CTRL_BUS_s_axi_U->oy(oy);
    conv_layer_CTRL_BUS_s_axi_U->id(id);
    conv_layer_CTRL_BUS_s_axi_U->ix(ix);
    conv_layer_CTRL_BUS_s_axi_U->iy(iy);
    conv_layer_CTRL_BUS_s_axi_U->s(s);
    conv_layer_CTRL_BUS_s_axi_U->k(k);
    conv_layer_mem_m_axi_U = new conv_layer_mem_m_axi<32,64,5,16,16,16,16,C_M_AXI_MEM_ID_WIDTH,C_M_AXI_MEM_ADDR_WIDTH,C_M_AXI_MEM_DATA_WIDTH,C_M_AXI_MEM_AWUSER_WIDTH,C_M_AXI_MEM_ARUSER_WIDTH,C_M_AXI_MEM_WUSER_WIDTH,C_M_AXI_MEM_RUSER_WIDTH,C_M_AXI_MEM_BUSER_WIDTH,C_M_AXI_MEM_TARGET_ADDR,C_M_AXI_MEM_USER_VALUE,C_M_AXI_MEM_PROT_VALUE,C_M_AXI_MEM_CACHE_VALUE>("conv_layer_mem_m_axi_U");
    conv_layer_mem_m_axi_U->AWVALID(m_axi_mem_AWVALID);
    conv_layer_mem_m_axi_U->AWREADY(m_axi_mem_AWREADY);
    conv_layer_mem_m_axi_U->AWADDR(m_axi_mem_AWADDR);
    conv_layer_mem_m_axi_U->AWID(m_axi_mem_AWID);
    conv_layer_mem_m_axi_U->AWLEN(m_axi_mem_AWLEN);
    conv_layer_mem_m_axi_U->AWSIZE(m_axi_mem_AWSIZE);
    conv_layer_mem_m_axi_U->AWBURST(m_axi_mem_AWBURST);
    conv_layer_mem_m_axi_U->AWLOCK(m_axi_mem_AWLOCK);
    conv_layer_mem_m_axi_U->AWCACHE(m_axi_mem_AWCACHE);
    conv_layer_mem_m_axi_U->AWPROT(m_axi_mem_AWPROT);
    conv_layer_mem_m_axi_U->AWQOS(m_axi_mem_AWQOS);
    conv_layer_mem_m_axi_U->AWREGION(m_axi_mem_AWREGION);
    conv_layer_mem_m_axi_U->AWUSER(m_axi_mem_AWUSER);
    conv_layer_mem_m_axi_U->WVALID(m_axi_mem_WVALID);
    conv_layer_mem_m_axi_U->WREADY(m_axi_mem_WREADY);
    conv_layer_mem_m_axi_U->WDATA(m_axi_mem_WDATA);
    conv_layer_mem_m_axi_U->WSTRB(m_axi_mem_WSTRB);
    conv_layer_mem_m_axi_U->WLAST(m_axi_mem_WLAST);
    conv_layer_mem_m_axi_U->WID(m_axi_mem_WID);
    conv_layer_mem_m_axi_U->WUSER(m_axi_mem_WUSER);
    conv_layer_mem_m_axi_U->ARVALID(m_axi_mem_ARVALID);
    conv_layer_mem_m_axi_U->ARREADY(m_axi_mem_ARREADY);
    conv_layer_mem_m_axi_U->ARADDR(m_axi_mem_ARADDR);
    conv_layer_mem_m_axi_U->ARID(m_axi_mem_ARID);
    conv_layer_mem_m_axi_U->ARLEN(m_axi_mem_ARLEN);
    conv_layer_mem_m_axi_U->ARSIZE(m_axi_mem_ARSIZE);
    conv_layer_mem_m_axi_U->ARBURST(m_axi_mem_ARBURST);
    conv_layer_mem_m_axi_U->ARLOCK(m_axi_mem_ARLOCK);
    conv_layer_mem_m_axi_U->ARCACHE(m_axi_mem_ARCACHE);
    conv_layer_mem_m_axi_U->ARPROT(m_axi_mem_ARPROT);
    conv_layer_mem_m_axi_U->ARQOS(m_axi_mem_ARQOS);
    conv_layer_mem_m_axi_U->ARREGION(m_axi_mem_ARREGION);
    conv_layer_mem_m_axi_U->ARUSER(m_axi_mem_ARUSER);
    conv_layer_mem_m_axi_U->RVALID(m_axi_mem_RVALID);
    conv_layer_mem_m_axi_U->RREADY(m_axi_mem_RREADY);
    conv_layer_mem_m_axi_U->RDATA(m_axi_mem_RDATA);
    conv_layer_mem_m_axi_U->RLAST(m_axi_mem_RLAST);
    conv_layer_mem_m_axi_U->RID(m_axi_mem_RID);
    conv_layer_mem_m_axi_U->RUSER(m_axi_mem_RUSER);
    conv_layer_mem_m_axi_U->RRESP(m_axi_mem_RRESP);
    conv_layer_mem_m_axi_U->BVALID(m_axi_mem_BVALID);
    conv_layer_mem_m_axi_U->BREADY(m_axi_mem_BREADY);
    conv_layer_mem_m_axi_U->BRESP(m_axi_mem_BRESP);
    conv_layer_mem_m_axi_U->BID(m_axi_mem_BID);
    conv_layer_mem_m_axi_U->BUSER(m_axi_mem_BUSER);
    conv_layer_mem_m_axi_U->ACLK(ap_clk);
    conv_layer_mem_m_axi_U->ARESET(ap_rst_n_inv);
    conv_layer_mem_m_axi_U->ACLK_EN(ap_var_for_const0);
    conv_layer_mem_m_axi_U->I_ARVALID(Loop_batch_loop_proc_U0_m_axi_mem_ARVALID);
    conv_layer_mem_m_axi_U->I_ARREADY(mem_ARREADY);
    conv_layer_mem_m_axi_U->I_ARADDR(Loop_batch_loop_proc_U0_m_axi_mem_ARADDR);
    conv_layer_mem_m_axi_U->I_ARID(Loop_batch_loop_proc_U0_m_axi_mem_ARID);
    conv_layer_mem_m_axi_U->I_ARLEN(Loop_batch_loop_proc_U0_m_axi_mem_ARLEN);
    conv_layer_mem_m_axi_U->I_ARSIZE(Loop_batch_loop_proc_U0_m_axi_mem_ARSIZE);
    conv_layer_mem_m_axi_U->I_ARLOCK(Loop_batch_loop_proc_U0_m_axi_mem_ARLOCK);
    conv_layer_mem_m_axi_U->I_ARCACHE(Loop_batch_loop_proc_U0_m_axi_mem_ARCACHE);
    conv_layer_mem_m_axi_U->I_ARQOS(Loop_batch_loop_proc_U0_m_axi_mem_ARQOS);
    conv_layer_mem_m_axi_U->I_ARPROT(Loop_batch_loop_proc_U0_m_axi_mem_ARPROT);
    conv_layer_mem_m_axi_U->I_ARUSER(Loop_batch_loop_proc_U0_m_axi_mem_ARUSER);
    conv_layer_mem_m_axi_U->I_ARBURST(Loop_batch_loop_proc_U0_m_axi_mem_ARBURST);
    conv_layer_mem_m_axi_U->I_ARREGION(Loop_batch_loop_proc_U0_m_axi_mem_ARREGION);
    conv_layer_mem_m_axi_U->I_RVALID(mem_RVALID);
    conv_layer_mem_m_axi_U->I_RREADY(Loop_batch_loop_proc_U0_m_axi_mem_RREADY);
    conv_layer_mem_m_axi_U->I_RDATA(mem_RDATA);
    conv_layer_mem_m_axi_U->I_RID(mem_RID);
    conv_layer_mem_m_axi_U->I_RUSER(mem_RUSER);
    conv_layer_mem_m_axi_U->I_RRESP(mem_RRESP);
    conv_layer_mem_m_axi_U->I_RLAST(mem_RLAST);
    conv_layer_mem_m_axi_U->I_AWVALID(Loop_batch_loop_proc_U0_m_axi_mem_AWVALID);
    conv_layer_mem_m_axi_U->I_AWREADY(mem_AWREADY);
    conv_layer_mem_m_axi_U->I_AWADDR(Loop_batch_loop_proc_U0_m_axi_mem_AWADDR);
    conv_layer_mem_m_axi_U->I_AWID(Loop_batch_loop_proc_U0_m_axi_mem_AWID);
    conv_layer_mem_m_axi_U->I_AWLEN(Loop_batch_loop_proc_U0_m_axi_mem_AWLEN);
    conv_layer_mem_m_axi_U->I_AWSIZE(Loop_batch_loop_proc_U0_m_axi_mem_AWSIZE);
    conv_layer_mem_m_axi_U->I_AWLOCK(Loop_batch_loop_proc_U0_m_axi_mem_AWLOCK);
    conv_layer_mem_m_axi_U->I_AWCACHE(Loop_batch_loop_proc_U0_m_axi_mem_AWCACHE);
    conv_layer_mem_m_axi_U->I_AWQOS(Loop_batch_loop_proc_U0_m_axi_mem_AWQOS);
    conv_layer_mem_m_axi_U->I_AWPROT(Loop_batch_loop_proc_U0_m_axi_mem_AWPROT);
    conv_layer_mem_m_axi_U->I_AWUSER(Loop_batch_loop_proc_U0_m_axi_mem_AWUSER);
    conv_layer_mem_m_axi_U->I_AWBURST(Loop_batch_loop_proc_U0_m_axi_mem_AWBURST);
    conv_layer_mem_m_axi_U->I_AWREGION(Loop_batch_loop_proc_U0_m_axi_mem_AWREGION);
    conv_layer_mem_m_axi_U->I_WVALID(Loop_batch_loop_proc_U0_m_axi_mem_WVALID);
    conv_layer_mem_m_axi_U->I_WREADY(mem_WREADY);
    conv_layer_mem_m_axi_U->I_WDATA(Loop_batch_loop_proc_U0_m_axi_mem_WDATA);
    conv_layer_mem_m_axi_U->I_WID(Loop_batch_loop_proc_U0_m_axi_mem_WID);
    conv_layer_mem_m_axi_U->I_WUSER(Loop_batch_loop_proc_U0_m_axi_mem_WUSER);
    conv_layer_mem_m_axi_U->I_WLAST(Loop_batch_loop_proc_U0_m_axi_mem_WLAST);
    conv_layer_mem_m_axi_U->I_WSTRB(Loop_batch_loop_proc_U0_m_axi_mem_WSTRB);
    conv_layer_mem_m_axi_U->I_BVALID(mem_BVALID);
    conv_layer_mem_m_axi_U->I_BREADY(Loop_batch_loop_proc_U0_m_axi_mem_BREADY);
    conv_layer_mem_m_axi_U->I_BRESP(mem_BRESP);
    conv_layer_mem_m_axi_U->I_BID(mem_BID);
    conv_layer_mem_m_axi_U->I_BUSER(mem_BUSER);
    Block_proc4_U0 = new Block_proc4("Block_proc4_U0");
    Block_proc4_U0->ap_clk(ap_clk);
    Block_proc4_U0->ap_rst(ap_rst_n_inv);
    Block_proc4_U0->ap_start(Block_proc4_U0_ap_start);
    Block_proc4_U0->ap_done(Block_proc4_U0_ap_done);
    Block_proc4_U0->ap_continue(Block_proc4_U0_ap_continue);
    Block_proc4_U0->ap_idle(Block_proc4_U0_ap_idle);
    Block_proc4_U0->ap_ready(Block_proc4_U0_ap_ready);
    Block_proc4_U0->id(id);
    Block_proc4_U0->od(od);
    Block_proc4_U0->k(k);
    Block_proc4_U0->input_offset(input_offset);
    Block_proc4_U0->output_offset(output_offset);
    Block_proc4_U0->b(b);
    Block_proc4_U0->ox(ox);
    Block_proc4_U0->oy(oy);
    Block_proc4_U0->ix(ix);
    Block_proc4_U0->iy(iy);
    Block_proc4_U0->s(s);
    Block_proc4_U0->id_out_din(Block_proc4_U0_id_out_din);
    Block_proc4_U0->id_out_full_n(id_channel_full_n);
    Block_proc4_U0->id_out_write(Block_proc4_U0_id_out_write);
    Block_proc4_U0->od_out_din(Block_proc4_U0_od_out_din);
    Block_proc4_U0->od_out_full_n(od_channel_full_n);
    Block_proc4_U0->od_out_write(Block_proc4_U0_od_out_write);
    Block_proc4_U0->k_out_din(Block_proc4_U0_k_out_din);
    Block_proc4_U0->k_out_full_n(k_channel_full_n);
    Block_proc4_U0->k_out_write(Block_proc4_U0_k_out_write);
    Block_proc4_U0->b_out_din(Block_proc4_U0_b_out_din);
    Block_proc4_U0->b_out_full_n(b_channel_full_n);
    Block_proc4_U0->b_out_write(Block_proc4_U0_b_out_write);
    Block_proc4_U0->ox_out_din(Block_proc4_U0_ox_out_din);
    Block_proc4_U0->ox_out_full_n(ox_channel_full_n);
    Block_proc4_U0->ox_out_write(Block_proc4_U0_ox_out_write);
    Block_proc4_U0->oy_out_din(Block_proc4_U0_oy_out_din);
    Block_proc4_U0->oy_out_full_n(oy_channel_full_n);
    Block_proc4_U0->oy_out_write(Block_proc4_U0_oy_out_write);
    Block_proc4_U0->ix_out_din(Block_proc4_U0_ix_out_din);
    Block_proc4_U0->ix_out_full_n(ix_channel_full_n);
    Block_proc4_U0->ix_out_write(Block_proc4_U0_ix_out_write);
    Block_proc4_U0->iy_out_din(Block_proc4_U0_iy_out_din);
    Block_proc4_U0->iy_out_full_n(iy_channel_full_n);
    Block_proc4_U0->iy_out_write(Block_proc4_U0_iy_out_write);
    Block_proc4_U0->s_out_din(Block_proc4_U0_s_out_din);
    Block_proc4_U0->s_out_full_n(s_channel_full_n);
    Block_proc4_U0->s_out_write(Block_proc4_U0_s_out_write);
    Block_proc4_U0->ap_return_0(Block_proc4_U0_ap_return_0);
    Block_proc4_U0->ap_return_1(Block_proc4_U0_ap_return_1);
    Block_proc4_U0->ap_return_2(Block_proc4_U0_ap_return_2);
    Block_proc4_U0->ap_return_3(Block_proc4_U0_ap_return_3);
    Loop_batch_loop_proc_U0 = new Loop_batch_loop_proc("Loop_batch_loop_proc_U0");
    Loop_batch_loop_proc_U0->ap_clk(ap_clk);
    Loop_batch_loop_proc_U0->ap_rst(ap_rst_n_inv);
    Loop_batch_loop_proc_U0->ap_start(Loop_batch_loop_proc_U0_ap_start);
    Loop_batch_loop_proc_U0->ap_done(Loop_batch_loop_proc_U0_ap_done);
    Loop_batch_loop_proc_U0->ap_continue(Loop_batch_loop_proc_U0_ap_continue);
    Loop_batch_loop_proc_U0->ap_idle(Loop_batch_loop_proc_U0_ap_idle);
    Loop_batch_loop_proc_U0->ap_ready(Loop_batch_loop_proc_U0_ap_ready);
    Loop_batch_loop_proc_U0->b_dout(b_channel_dout);
    Loop_batch_loop_proc_U0->b_empty_n(b_channel_empty_n);
    Loop_batch_loop_proc_U0->b_read(Loop_batch_loop_proc_U0_b_read);
    Loop_batch_loop_proc_U0->od_dout(od_channel_dout);
    Loop_batch_loop_proc_U0->od_empty_n(od_channel_empty_n);
    Loop_batch_loop_proc_U0->od_read(Loop_batch_loop_proc_U0_od_read);
    Loop_batch_loop_proc_U0->id_dout(id_channel_dout);
    Loop_batch_loop_proc_U0->id_empty_n(id_channel_empty_n);
    Loop_batch_loop_proc_U0->id_read(Loop_batch_loop_proc_U0_id_read);
    Loop_batch_loop_proc_U0->ix_dout(ix_channel_dout);
    Loop_batch_loop_proc_U0->ix_empty_n(ix_channel_empty_n);
    Loop_batch_loop_proc_U0->ix_read(Loop_batch_loop_proc_U0_ix_read);
    Loop_batch_loop_proc_U0->iy_dout(iy_channel_dout);
    Loop_batch_loop_proc_U0->iy_empty_n(iy_channel_empty_n);
    Loop_batch_loop_proc_U0->iy_read(Loop_batch_loop_proc_U0_iy_read);
    Loop_batch_loop_proc_U0->ox_dout(ox_channel_dout);
    Loop_batch_loop_proc_U0->ox_empty_n(ox_channel_empty_n);
    Loop_batch_loop_proc_U0->ox_read(Loop_batch_loop_proc_U0_ox_read);
    Loop_batch_loop_proc_U0->oy_dout(oy_channel_dout);
    Loop_batch_loop_proc_U0->oy_empty_n(oy_channel_empty_n);
    Loop_batch_loop_proc_U0->oy_read(Loop_batch_loop_proc_U0_oy_read);
    Loop_batch_loop_proc_U0->p_read(tmp_4_loc_channel_dout);
    Loop_batch_loop_proc_U0->p_read1(tmp_3_loc_channel_dout);
    Loop_batch_loop_proc_U0->m_axi_mem_AWVALID(Loop_batch_loop_proc_U0_m_axi_mem_AWVALID);
    Loop_batch_loop_proc_U0->m_axi_mem_AWREADY(mem_AWREADY);
    Loop_batch_loop_proc_U0->m_axi_mem_AWADDR(Loop_batch_loop_proc_U0_m_axi_mem_AWADDR);
    Loop_batch_loop_proc_U0->m_axi_mem_AWID(Loop_batch_loop_proc_U0_m_axi_mem_AWID);
    Loop_batch_loop_proc_U0->m_axi_mem_AWLEN(Loop_batch_loop_proc_U0_m_axi_mem_AWLEN);
    Loop_batch_loop_proc_U0->m_axi_mem_AWSIZE(Loop_batch_loop_proc_U0_m_axi_mem_AWSIZE);
    Loop_batch_loop_proc_U0->m_axi_mem_AWBURST(Loop_batch_loop_proc_U0_m_axi_mem_AWBURST);
    Loop_batch_loop_proc_U0->m_axi_mem_AWLOCK(Loop_batch_loop_proc_U0_m_axi_mem_AWLOCK);
    Loop_batch_loop_proc_U0->m_axi_mem_AWCACHE(Loop_batch_loop_proc_U0_m_axi_mem_AWCACHE);
    Loop_batch_loop_proc_U0->m_axi_mem_AWPROT(Loop_batch_loop_proc_U0_m_axi_mem_AWPROT);
    Loop_batch_loop_proc_U0->m_axi_mem_AWQOS(Loop_batch_loop_proc_U0_m_axi_mem_AWQOS);
    Loop_batch_loop_proc_U0->m_axi_mem_AWREGION(Loop_batch_loop_proc_U0_m_axi_mem_AWREGION);
    Loop_batch_loop_proc_U0->m_axi_mem_AWUSER(Loop_batch_loop_proc_U0_m_axi_mem_AWUSER);
    Loop_batch_loop_proc_U0->m_axi_mem_WVALID(Loop_batch_loop_proc_U0_m_axi_mem_WVALID);
    Loop_batch_loop_proc_U0->m_axi_mem_WREADY(mem_WREADY);
    Loop_batch_loop_proc_U0->m_axi_mem_WDATA(Loop_batch_loop_proc_U0_m_axi_mem_WDATA);
    Loop_batch_loop_proc_U0->m_axi_mem_WSTRB(Loop_batch_loop_proc_U0_m_axi_mem_WSTRB);
    Loop_batch_loop_proc_U0->m_axi_mem_WLAST(Loop_batch_loop_proc_U0_m_axi_mem_WLAST);
    Loop_batch_loop_proc_U0->m_axi_mem_WID(Loop_batch_loop_proc_U0_m_axi_mem_WID);
    Loop_batch_loop_proc_U0->m_axi_mem_WUSER(Loop_batch_loop_proc_U0_m_axi_mem_WUSER);
    Loop_batch_loop_proc_U0->m_axi_mem_ARVALID(Loop_batch_loop_proc_U0_m_axi_mem_ARVALID);
    Loop_batch_loop_proc_U0->m_axi_mem_ARREADY(mem_ARREADY);
    Loop_batch_loop_proc_U0->m_axi_mem_ARADDR(Loop_batch_loop_proc_U0_m_axi_mem_ARADDR);
    Loop_batch_loop_proc_U0->m_axi_mem_ARID(Loop_batch_loop_proc_U0_m_axi_mem_ARID);
    Loop_batch_loop_proc_U0->m_axi_mem_ARLEN(Loop_batch_loop_proc_U0_m_axi_mem_ARLEN);
    Loop_batch_loop_proc_U0->m_axi_mem_ARSIZE(Loop_batch_loop_proc_U0_m_axi_mem_ARSIZE);
    Loop_batch_loop_proc_U0->m_axi_mem_ARBURST(Loop_batch_loop_proc_U0_m_axi_mem_ARBURST);
    Loop_batch_loop_proc_U0->m_axi_mem_ARLOCK(Loop_batch_loop_proc_U0_m_axi_mem_ARLOCK);
    Loop_batch_loop_proc_U0->m_axi_mem_ARCACHE(Loop_batch_loop_proc_U0_m_axi_mem_ARCACHE);
    Loop_batch_loop_proc_U0->m_axi_mem_ARPROT(Loop_batch_loop_proc_U0_m_axi_mem_ARPROT);
    Loop_batch_loop_proc_U0->m_axi_mem_ARQOS(Loop_batch_loop_proc_U0_m_axi_mem_ARQOS);
    Loop_batch_loop_proc_U0->m_axi_mem_ARREGION(Loop_batch_loop_proc_U0_m_axi_mem_ARREGION);
    Loop_batch_loop_proc_U0->m_axi_mem_ARUSER(Loop_batch_loop_proc_U0_m_axi_mem_ARUSER);
    Loop_batch_loop_proc_U0->m_axi_mem_RVALID(mem_RVALID);
    Loop_batch_loop_proc_U0->m_axi_mem_RREADY(Loop_batch_loop_proc_U0_m_axi_mem_RREADY);
    Loop_batch_loop_proc_U0->m_axi_mem_RDATA(mem_RDATA);
    Loop_batch_loop_proc_U0->m_axi_mem_RLAST(mem_RLAST);
    Loop_batch_loop_proc_U0->m_axi_mem_RID(mem_RID);
    Loop_batch_loop_proc_U0->m_axi_mem_RUSER(mem_RUSER);
    Loop_batch_loop_proc_U0->m_axi_mem_RRESP(mem_RRESP);
    Loop_batch_loop_proc_U0->m_axi_mem_BVALID(mem_BVALID);
    Loop_batch_loop_proc_U0->m_axi_mem_BREADY(Loop_batch_loop_proc_U0_m_axi_mem_BREADY);
    Loop_batch_loop_proc_U0->m_axi_mem_BRESP(mem_BRESP);
    Loop_batch_loop_proc_U0->m_axi_mem_BID(mem_BID);
    Loop_batch_loop_proc_U0->m_axi_mem_BUSER(mem_BUSER);
    Loop_batch_loop_proc_U0->k_dout(k_channel_dout);
    Loop_batch_loop_proc_U0->k_empty_n(k_channel_empty_n);
    Loop_batch_loop_proc_U0->k_read(Loop_batch_loop_proc_U0_k_read);
    Loop_batch_loop_proc_U0->s_dout(s_channel_dout);
    Loop_batch_loop_proc_U0->s_empty_n(s_channel_empty_n);
    Loop_batch_loop_proc_U0->s_read(Loop_batch_loop_proc_U0_s_read);
    Loop_batch_loop_proc_U0->p_read2(tmp_7_loc_channel_dout);
    Loop_batch_loop_proc_U0->p_read3(tmp_5_loc_channel_dout);
    id_channel_U = new fifo_w32_d1_A("id_channel_U");
    id_channel_U->clk(ap_clk);
    id_channel_U->reset(ap_rst_n_inv);
    id_channel_U->if_read_ce(ap_var_for_const0);
    id_channel_U->if_write_ce(ap_var_for_const0);
    id_channel_U->if_din(Block_proc4_U0_id_out_din);
    id_channel_U->if_full_n(id_channel_full_n);
    id_channel_U->if_write(Block_proc4_U0_id_out_write);
    id_channel_U->if_dout(id_channel_dout);
    id_channel_U->if_empty_n(id_channel_empty_n);
    id_channel_U->if_read(Loop_batch_loop_proc_U0_id_read);
    od_channel_U = new fifo_w32_d1_A("od_channel_U");
    od_channel_U->clk(ap_clk);
    od_channel_U->reset(ap_rst_n_inv);
    od_channel_U->if_read_ce(ap_var_for_const0);
    od_channel_U->if_write_ce(ap_var_for_const0);
    od_channel_U->if_din(Block_proc4_U0_od_out_din);
    od_channel_U->if_full_n(od_channel_full_n);
    od_channel_U->if_write(Block_proc4_U0_od_out_write);
    od_channel_U->if_dout(od_channel_dout);
    od_channel_U->if_empty_n(od_channel_empty_n);
    od_channel_U->if_read(Loop_batch_loop_proc_U0_od_read);
    k_channel_U = new fifo_w32_d1_A("k_channel_U");
    k_channel_U->clk(ap_clk);
    k_channel_U->reset(ap_rst_n_inv);
    k_channel_U->if_read_ce(ap_var_for_const0);
    k_channel_U->if_write_ce(ap_var_for_const0);
    k_channel_U->if_din(Block_proc4_U0_k_out_din);
    k_channel_U->if_full_n(k_channel_full_n);
    k_channel_U->if_write(Block_proc4_U0_k_out_write);
    k_channel_U->if_dout(k_channel_dout);
    k_channel_U->if_empty_n(k_channel_empty_n);
    k_channel_U->if_read(Loop_batch_loop_proc_U0_k_read);
    b_channel_U = new fifo_w32_d1_A("b_channel_U");
    b_channel_U->clk(ap_clk);
    b_channel_U->reset(ap_rst_n_inv);
    b_channel_U->if_read_ce(ap_var_for_const0);
    b_channel_U->if_write_ce(ap_var_for_const0);
    b_channel_U->if_din(Block_proc4_U0_b_out_din);
    b_channel_U->if_full_n(b_channel_full_n);
    b_channel_U->if_write(Block_proc4_U0_b_out_write);
    b_channel_U->if_dout(b_channel_dout);
    b_channel_U->if_empty_n(b_channel_empty_n);
    b_channel_U->if_read(Loop_batch_loop_proc_U0_b_read);
    ox_channel_U = new fifo_w32_d1_A("ox_channel_U");
    ox_channel_U->clk(ap_clk);
    ox_channel_U->reset(ap_rst_n_inv);
    ox_channel_U->if_read_ce(ap_var_for_const0);
    ox_channel_U->if_write_ce(ap_var_for_const0);
    ox_channel_U->if_din(Block_proc4_U0_ox_out_din);
    ox_channel_U->if_full_n(ox_channel_full_n);
    ox_channel_U->if_write(Block_proc4_U0_ox_out_write);
    ox_channel_U->if_dout(ox_channel_dout);
    ox_channel_U->if_empty_n(ox_channel_empty_n);
    ox_channel_U->if_read(Loop_batch_loop_proc_U0_ox_read);
    oy_channel_U = new fifo_w32_d1_A("oy_channel_U");
    oy_channel_U->clk(ap_clk);
    oy_channel_U->reset(ap_rst_n_inv);
    oy_channel_U->if_read_ce(ap_var_for_const0);
    oy_channel_U->if_write_ce(ap_var_for_const0);
    oy_channel_U->if_din(Block_proc4_U0_oy_out_din);
    oy_channel_U->if_full_n(oy_channel_full_n);
    oy_channel_U->if_write(Block_proc4_U0_oy_out_write);
    oy_channel_U->if_dout(oy_channel_dout);
    oy_channel_U->if_empty_n(oy_channel_empty_n);
    oy_channel_U->if_read(Loop_batch_loop_proc_U0_oy_read);
    ix_channel_U = new fifo_w32_d1_A("ix_channel_U");
    ix_channel_U->clk(ap_clk);
    ix_channel_U->reset(ap_rst_n_inv);
    ix_channel_U->if_read_ce(ap_var_for_const0);
    ix_channel_U->if_write_ce(ap_var_for_const0);
    ix_channel_U->if_din(Block_proc4_U0_ix_out_din);
    ix_channel_U->if_full_n(ix_channel_full_n);
    ix_channel_U->if_write(Block_proc4_U0_ix_out_write);
    ix_channel_U->if_dout(ix_channel_dout);
    ix_channel_U->if_empty_n(ix_channel_empty_n);
    ix_channel_U->if_read(Loop_batch_loop_proc_U0_ix_read);
    iy_channel_U = new fifo_w32_d1_A("iy_channel_U");
    iy_channel_U->clk(ap_clk);
    iy_channel_U->reset(ap_rst_n_inv);
    iy_channel_U->if_read_ce(ap_var_for_const0);
    iy_channel_U->if_write_ce(ap_var_for_const0);
    iy_channel_U->if_din(Block_proc4_U0_iy_out_din);
    iy_channel_U->if_full_n(iy_channel_full_n);
    iy_channel_U->if_write(Block_proc4_U0_iy_out_write);
    iy_channel_U->if_dout(iy_channel_dout);
    iy_channel_U->if_empty_n(iy_channel_empty_n);
    iy_channel_U->if_read(Loop_batch_loop_proc_U0_iy_read);
    s_channel_U = new fifo_w32_d1_A("s_channel_U");
    s_channel_U->clk(ap_clk);
    s_channel_U->reset(ap_rst_n_inv);
    s_channel_U->if_read_ce(ap_var_for_const0);
    s_channel_U->if_write_ce(ap_var_for_const0);
    s_channel_U->if_din(Block_proc4_U0_s_out_din);
    s_channel_U->if_full_n(s_channel_full_n);
    s_channel_U->if_write(Block_proc4_U0_s_out_write);
    s_channel_U->if_dout(s_channel_dout);
    s_channel_U->if_empty_n(s_channel_empty_n);
    s_channel_U->if_read(Loop_batch_loop_proc_U0_s_read);
    tmp_4_loc_channel_U = new fifo_w64_d2_A("tmp_4_loc_channel_U");
    tmp_4_loc_channel_U->clk(ap_clk);
    tmp_4_loc_channel_U->reset(ap_rst_n_inv);
    tmp_4_loc_channel_U->if_read_ce(ap_var_for_const0);
    tmp_4_loc_channel_U->if_write_ce(ap_var_for_const0);
    tmp_4_loc_channel_U->if_din(Block_proc4_U0_ap_return_0);
    tmp_4_loc_channel_U->if_full_n(tmp_4_loc_channel_full_n);
    tmp_4_loc_channel_U->if_write(ap_channel_done_tmp_4_loc_channel);
    tmp_4_loc_channel_U->if_dout(tmp_4_loc_channel_dout);
    tmp_4_loc_channel_U->if_empty_n(tmp_4_loc_channel_empty_n);
    tmp_4_loc_channel_U->if_read(Loop_batch_loop_proc_U0_ap_ready);
    tmp_3_loc_channel_U = new fifo_w64_d2_A("tmp_3_loc_channel_U");
    tmp_3_loc_channel_U->clk(ap_clk);
    tmp_3_loc_channel_U->reset(ap_rst_n_inv);
    tmp_3_loc_channel_U->if_read_ce(ap_var_for_const0);
    tmp_3_loc_channel_U->if_write_ce(ap_var_for_const0);
    tmp_3_loc_channel_U->if_din(Block_proc4_U0_ap_return_1);
    tmp_3_loc_channel_U->if_full_n(tmp_3_loc_channel_full_n);
    tmp_3_loc_channel_U->if_write(ap_channel_done_tmp_3_loc_channel);
    tmp_3_loc_channel_U->if_dout(tmp_3_loc_channel_dout);
    tmp_3_loc_channel_U->if_empty_n(tmp_3_loc_channel_empty_n);
    tmp_3_loc_channel_U->if_read(Loop_batch_loop_proc_U0_ap_ready);
    tmp_5_loc_channel_U = new fifo_w64_d2_A("tmp_5_loc_channel_U");
    tmp_5_loc_channel_U->clk(ap_clk);
    tmp_5_loc_channel_U->reset(ap_rst_n_inv);
    tmp_5_loc_channel_U->if_read_ce(ap_var_for_const0);
    tmp_5_loc_channel_U->if_write_ce(ap_var_for_const0);
    tmp_5_loc_channel_U->if_din(Block_proc4_U0_ap_return_2);
    tmp_5_loc_channel_U->if_full_n(tmp_5_loc_channel_full_n);
    tmp_5_loc_channel_U->if_write(ap_channel_done_tmp_5_loc_channel);
    tmp_5_loc_channel_U->if_dout(tmp_5_loc_channel_dout);
    tmp_5_loc_channel_U->if_empty_n(tmp_5_loc_channel_empty_n);
    tmp_5_loc_channel_U->if_read(Loop_batch_loop_proc_U0_ap_ready);
    tmp_7_loc_channel_U = new fifo_w64_d2_A("tmp_7_loc_channel_U");
    tmp_7_loc_channel_U->clk(ap_clk);
    tmp_7_loc_channel_U->reset(ap_rst_n_inv);
    tmp_7_loc_channel_U->if_read_ce(ap_var_for_const0);
    tmp_7_loc_channel_U->if_write_ce(ap_var_for_const0);
    tmp_7_loc_channel_U->if_din(Block_proc4_U0_ap_return_3);
    tmp_7_loc_channel_U->if_full_n(tmp_7_loc_channel_full_n);
    tmp_7_loc_channel_U->if_write(ap_channel_done_tmp_7_loc_channel);
    tmp_7_loc_channel_U->if_dout(tmp_7_loc_channel_dout);
    tmp_7_loc_channel_U->if_empty_n(tmp_7_loc_channel_empty_n);
    tmp_7_loc_channel_U->if_read(Loop_batch_loop_proc_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Block_proc4_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_tmp_7_loc_channel );
    sensitive << ( ap_sync_channel_write_tmp_5_loc_channel );
    sensitive << ( ap_sync_channel_write_tmp_3_loc_channel );
    sensitive << ( ap_sync_channel_write_tmp_4_loc_channel );

    SC_METHOD(thread_Block_proc4_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_proc4_U0_ap_ready );

    SC_METHOD(thread_Block_proc4_U0_start_full_n);

    SC_METHOD(thread_Block_proc4_U0_start_write);

    SC_METHOD(thread_Loop_batch_loop_proc_U0_ap_continue);

    SC_METHOD(thread_Loop_batch_loop_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( tmp_4_loc_channel_empty_n );
    sensitive << ( tmp_3_loc_channel_empty_n );
    sensitive << ( tmp_5_loc_channel_empty_n );
    sensitive << ( tmp_7_loc_channel_empty_n );
    sensitive << ( ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready );

    SC_METHOD(thread_Loop_batch_loop_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_batch_loop_proc_U0_start_write);

    SC_METHOD(thread_ap_channel_done_tmp_3_loc_channel);
    sensitive << ( Block_proc4_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_tmp_3_loc_channel );

    SC_METHOD(thread_ap_channel_done_tmp_4_loc_channel);
    sensitive << ( Block_proc4_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_tmp_4_loc_channel );

    SC_METHOD(thread_ap_channel_done_tmp_5_loc_channel);
    sensitive << ( Block_proc4_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_tmp_5_loc_channel );

    SC_METHOD(thread_ap_channel_done_tmp_7_loc_channel);
    sensitive << ( Block_proc4_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_tmp_7_loc_channel );

    SC_METHOD(thread_ap_done);
    sensitive << ( Loop_batch_loop_proc_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Block_proc4_U0_ap_idle );
    sensitive << ( Loop_batch_loop_proc_U0_ap_idle );
    sensitive << ( tmp_4_loc_channel_empty_n );
    sensitive << ( tmp_3_loc_channel_empty_n );
    sensitive << ( tmp_5_loc_channel_empty_n );
    sensitive << ( tmp_7_loc_channel_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_Block_proc4_U0_ap_ready);
    sensitive << ( Block_proc4_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_proc4_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Loop_batch_loop_proc_U0_ap_ready);
    sensitive << ( Loop_batch_loop_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_channel_write_tmp_3_loc_channel);
    sensitive << ( ap_channel_done_tmp_3_loc_channel );
    sensitive << ( tmp_3_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_tmp_3_loc_channel );

    SC_METHOD(thread_ap_sync_channel_write_tmp_4_loc_channel);
    sensitive << ( ap_channel_done_tmp_4_loc_channel );
    sensitive << ( tmp_4_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_tmp_4_loc_channel );

    SC_METHOD(thread_ap_sync_channel_write_tmp_5_loc_channel);
    sensitive << ( ap_channel_done_tmp_5_loc_channel );
    sensitive << ( tmp_5_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_tmp_5_loc_channel );

    SC_METHOD(thread_ap_sync_channel_write_tmp_7_loc_channel);
    sensitive << ( ap_channel_done_tmp_7_loc_channel );
    sensitive << ( tmp_7_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_tmp_7_loc_channel );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Loop_batch_loop_proc_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_Loop_batch_loop_proc_U0_ap_ready );
    sensitive << ( ap_sync_Block_proc4_U0_ap_ready );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_channel_write_tmp_7_loc_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_tmp_5_loc_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_tmp_3_loc_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_tmp_4_loc_channel = SC_LOGIC_0;
    ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready = SC_LOGIC_0;
    Loop_batch_loop_proc_U0_ap_ready_count = "00";
    ap_sync_reg_Block_proc4_U0_ap_ready = SC_LOGIC_0;
    Block_proc4_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_mem_AWVALID, "(port)m_axi_mem_AWVALID");
    sc_trace(mVcdFile, m_axi_mem_AWREADY, "(port)m_axi_mem_AWREADY");
    sc_trace(mVcdFile, m_axi_mem_AWADDR, "(port)m_axi_mem_AWADDR");
    sc_trace(mVcdFile, m_axi_mem_AWID, "(port)m_axi_mem_AWID");
    sc_trace(mVcdFile, m_axi_mem_AWLEN, "(port)m_axi_mem_AWLEN");
    sc_trace(mVcdFile, m_axi_mem_AWSIZE, "(port)m_axi_mem_AWSIZE");
    sc_trace(mVcdFile, m_axi_mem_AWBURST, "(port)m_axi_mem_AWBURST");
    sc_trace(mVcdFile, m_axi_mem_AWLOCK, "(port)m_axi_mem_AWLOCK");
    sc_trace(mVcdFile, m_axi_mem_AWCACHE, "(port)m_axi_mem_AWCACHE");
    sc_trace(mVcdFile, m_axi_mem_AWPROT, "(port)m_axi_mem_AWPROT");
    sc_trace(mVcdFile, m_axi_mem_AWQOS, "(port)m_axi_mem_AWQOS");
    sc_trace(mVcdFile, m_axi_mem_AWREGION, "(port)m_axi_mem_AWREGION");
    sc_trace(mVcdFile, m_axi_mem_AWUSER, "(port)m_axi_mem_AWUSER");
    sc_trace(mVcdFile, m_axi_mem_WVALID, "(port)m_axi_mem_WVALID");
    sc_trace(mVcdFile, m_axi_mem_WREADY, "(port)m_axi_mem_WREADY");
    sc_trace(mVcdFile, m_axi_mem_WDATA, "(port)m_axi_mem_WDATA");
    sc_trace(mVcdFile, m_axi_mem_WSTRB, "(port)m_axi_mem_WSTRB");
    sc_trace(mVcdFile, m_axi_mem_WLAST, "(port)m_axi_mem_WLAST");
    sc_trace(mVcdFile, m_axi_mem_WID, "(port)m_axi_mem_WID");
    sc_trace(mVcdFile, m_axi_mem_WUSER, "(port)m_axi_mem_WUSER");
    sc_trace(mVcdFile, m_axi_mem_ARVALID, "(port)m_axi_mem_ARVALID");
    sc_trace(mVcdFile, m_axi_mem_ARREADY, "(port)m_axi_mem_ARREADY");
    sc_trace(mVcdFile, m_axi_mem_ARADDR, "(port)m_axi_mem_ARADDR");
    sc_trace(mVcdFile, m_axi_mem_ARID, "(port)m_axi_mem_ARID");
    sc_trace(mVcdFile, m_axi_mem_ARLEN, "(port)m_axi_mem_ARLEN");
    sc_trace(mVcdFile, m_axi_mem_ARSIZE, "(port)m_axi_mem_ARSIZE");
    sc_trace(mVcdFile, m_axi_mem_ARBURST, "(port)m_axi_mem_ARBURST");
    sc_trace(mVcdFile, m_axi_mem_ARLOCK, "(port)m_axi_mem_ARLOCK");
    sc_trace(mVcdFile, m_axi_mem_ARCACHE, "(port)m_axi_mem_ARCACHE");
    sc_trace(mVcdFile, m_axi_mem_ARPROT, "(port)m_axi_mem_ARPROT");
    sc_trace(mVcdFile, m_axi_mem_ARQOS, "(port)m_axi_mem_ARQOS");
    sc_trace(mVcdFile, m_axi_mem_ARREGION, "(port)m_axi_mem_ARREGION");
    sc_trace(mVcdFile, m_axi_mem_ARUSER, "(port)m_axi_mem_ARUSER");
    sc_trace(mVcdFile, m_axi_mem_RVALID, "(port)m_axi_mem_RVALID");
    sc_trace(mVcdFile, m_axi_mem_RREADY, "(port)m_axi_mem_RREADY");
    sc_trace(mVcdFile, m_axi_mem_RDATA, "(port)m_axi_mem_RDATA");
    sc_trace(mVcdFile, m_axi_mem_RLAST, "(port)m_axi_mem_RLAST");
    sc_trace(mVcdFile, m_axi_mem_RID, "(port)m_axi_mem_RID");
    sc_trace(mVcdFile, m_axi_mem_RUSER, "(port)m_axi_mem_RUSER");
    sc_trace(mVcdFile, m_axi_mem_RRESP, "(port)m_axi_mem_RRESP");
    sc_trace(mVcdFile, m_axi_mem_BVALID, "(port)m_axi_mem_BVALID");
    sc_trace(mVcdFile, m_axi_mem_BREADY, "(port)m_axi_mem_BREADY");
    sc_trace(mVcdFile, m_axi_mem_BRESP, "(port)m_axi_mem_BRESP");
    sc_trace(mVcdFile, m_axi_mem_BID, "(port)m_axi_mem_BID");
    sc_trace(mVcdFile, m_axi_mem_BUSER, "(port)m_axi_mem_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, input_offset, "input_offset");
    sc_trace(mVcdFile, output_offset, "output_offset");
    sc_trace(mVcdFile, b, "b");
    sc_trace(mVcdFile, od, "od");
    sc_trace(mVcdFile, ox, "ox");
    sc_trace(mVcdFile, oy, "oy");
    sc_trace(mVcdFile, id, "id");
    sc_trace(mVcdFile, ix, "ix");
    sc_trace(mVcdFile, iy, "iy");
    sc_trace(mVcdFile, s, "s");
    sc_trace(mVcdFile, k, "k");
    sc_trace(mVcdFile, mem_AWREADY, "mem_AWREADY");
    sc_trace(mVcdFile, mem_WREADY, "mem_WREADY");
    sc_trace(mVcdFile, mem_ARREADY, "mem_ARREADY");
    sc_trace(mVcdFile, mem_RVALID, "mem_RVALID");
    sc_trace(mVcdFile, mem_RDATA, "mem_RDATA");
    sc_trace(mVcdFile, mem_RLAST, "mem_RLAST");
    sc_trace(mVcdFile, mem_RID, "mem_RID");
    sc_trace(mVcdFile, mem_RUSER, "mem_RUSER");
    sc_trace(mVcdFile, mem_RRESP, "mem_RRESP");
    sc_trace(mVcdFile, mem_BVALID, "mem_BVALID");
    sc_trace(mVcdFile, mem_BRESP, "mem_BRESP");
    sc_trace(mVcdFile, mem_BID, "mem_BID");
    sc_trace(mVcdFile, mem_BUSER, "mem_BUSER");
    sc_trace(mVcdFile, Block_proc4_U0_ap_start, "Block_proc4_U0_ap_start");
    sc_trace(mVcdFile, Block_proc4_U0_ap_done, "Block_proc4_U0_ap_done");
    sc_trace(mVcdFile, Block_proc4_U0_ap_continue, "Block_proc4_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc4_U0_ap_idle, "Block_proc4_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc4_U0_ap_ready, "Block_proc4_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc4_U0_id_out_din, "Block_proc4_U0_id_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_id_out_write, "Block_proc4_U0_id_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_od_out_din, "Block_proc4_U0_od_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_od_out_write, "Block_proc4_U0_od_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_k_out_din, "Block_proc4_U0_k_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_k_out_write, "Block_proc4_U0_k_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_b_out_din, "Block_proc4_U0_b_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_b_out_write, "Block_proc4_U0_b_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_ox_out_din, "Block_proc4_U0_ox_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_ox_out_write, "Block_proc4_U0_ox_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_oy_out_din, "Block_proc4_U0_oy_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_oy_out_write, "Block_proc4_U0_oy_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_ix_out_din, "Block_proc4_U0_ix_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_ix_out_write, "Block_proc4_U0_ix_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_iy_out_din, "Block_proc4_U0_iy_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_iy_out_write, "Block_proc4_U0_iy_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_s_out_din, "Block_proc4_U0_s_out_din");
    sc_trace(mVcdFile, Block_proc4_U0_s_out_write, "Block_proc4_U0_s_out_write");
    sc_trace(mVcdFile, Block_proc4_U0_ap_return_0, "Block_proc4_U0_ap_return_0");
    sc_trace(mVcdFile, Block_proc4_U0_ap_return_1, "Block_proc4_U0_ap_return_1");
    sc_trace(mVcdFile, Block_proc4_U0_ap_return_2, "Block_proc4_U0_ap_return_2");
    sc_trace(mVcdFile, Block_proc4_U0_ap_return_3, "Block_proc4_U0_ap_return_3");
    sc_trace(mVcdFile, ap_channel_done_tmp_7_loc_channel, "ap_channel_done_tmp_7_loc_channel");
    sc_trace(mVcdFile, tmp_7_loc_channel_full_n, "tmp_7_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_tmp_7_loc_channel, "ap_sync_reg_channel_write_tmp_7_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_tmp_7_loc_channel, "ap_sync_channel_write_tmp_7_loc_channel");
    sc_trace(mVcdFile, ap_channel_done_tmp_5_loc_channel, "ap_channel_done_tmp_5_loc_channel");
    sc_trace(mVcdFile, tmp_5_loc_channel_full_n, "tmp_5_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_tmp_5_loc_channel, "ap_sync_reg_channel_write_tmp_5_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_tmp_5_loc_channel, "ap_sync_channel_write_tmp_5_loc_channel");
    sc_trace(mVcdFile, ap_channel_done_tmp_3_loc_channel, "ap_channel_done_tmp_3_loc_channel");
    sc_trace(mVcdFile, tmp_3_loc_channel_full_n, "tmp_3_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_tmp_3_loc_channel, "ap_sync_reg_channel_write_tmp_3_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_tmp_3_loc_channel, "ap_sync_channel_write_tmp_3_loc_channel");
    sc_trace(mVcdFile, ap_channel_done_tmp_4_loc_channel, "ap_channel_done_tmp_4_loc_channel");
    sc_trace(mVcdFile, tmp_4_loc_channel_full_n, "tmp_4_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_tmp_4_loc_channel, "ap_sync_reg_channel_write_tmp_4_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_tmp_4_loc_channel, "ap_sync_channel_write_tmp_4_loc_channel");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ap_start, "Loop_batch_loop_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ap_done, "Loop_batch_loop_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ap_continue, "Loop_batch_loop_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ap_idle, "Loop_batch_loop_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ap_ready, "Loop_batch_loop_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_b_read, "Loop_batch_loop_proc_U0_b_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_od_read, "Loop_batch_loop_proc_U0_od_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_id_read, "Loop_batch_loop_proc_U0_id_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ix_read, "Loop_batch_loop_proc_U0_ix_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_iy_read, "Loop_batch_loop_proc_U0_iy_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ox_read, "Loop_batch_loop_proc_U0_ox_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_oy_read, "Loop_batch_loop_proc_U0_oy_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWVALID, "Loop_batch_loop_proc_U0_m_axi_mem_AWVALID");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWADDR, "Loop_batch_loop_proc_U0_m_axi_mem_AWADDR");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWID, "Loop_batch_loop_proc_U0_m_axi_mem_AWID");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWLEN, "Loop_batch_loop_proc_U0_m_axi_mem_AWLEN");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWSIZE, "Loop_batch_loop_proc_U0_m_axi_mem_AWSIZE");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWBURST, "Loop_batch_loop_proc_U0_m_axi_mem_AWBURST");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWLOCK, "Loop_batch_loop_proc_U0_m_axi_mem_AWLOCK");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWCACHE, "Loop_batch_loop_proc_U0_m_axi_mem_AWCACHE");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWPROT, "Loop_batch_loop_proc_U0_m_axi_mem_AWPROT");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWQOS, "Loop_batch_loop_proc_U0_m_axi_mem_AWQOS");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWREGION, "Loop_batch_loop_proc_U0_m_axi_mem_AWREGION");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_AWUSER, "Loop_batch_loop_proc_U0_m_axi_mem_AWUSER");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_WVALID, "Loop_batch_loop_proc_U0_m_axi_mem_WVALID");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_WDATA, "Loop_batch_loop_proc_U0_m_axi_mem_WDATA");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_WSTRB, "Loop_batch_loop_proc_U0_m_axi_mem_WSTRB");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_WLAST, "Loop_batch_loop_proc_U0_m_axi_mem_WLAST");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_WID, "Loop_batch_loop_proc_U0_m_axi_mem_WID");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_WUSER, "Loop_batch_loop_proc_U0_m_axi_mem_WUSER");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARVALID, "Loop_batch_loop_proc_U0_m_axi_mem_ARVALID");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARADDR, "Loop_batch_loop_proc_U0_m_axi_mem_ARADDR");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARID, "Loop_batch_loop_proc_U0_m_axi_mem_ARID");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARLEN, "Loop_batch_loop_proc_U0_m_axi_mem_ARLEN");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARSIZE, "Loop_batch_loop_proc_U0_m_axi_mem_ARSIZE");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARBURST, "Loop_batch_loop_proc_U0_m_axi_mem_ARBURST");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARLOCK, "Loop_batch_loop_proc_U0_m_axi_mem_ARLOCK");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARCACHE, "Loop_batch_loop_proc_U0_m_axi_mem_ARCACHE");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARPROT, "Loop_batch_loop_proc_U0_m_axi_mem_ARPROT");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARQOS, "Loop_batch_loop_proc_U0_m_axi_mem_ARQOS");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARREGION, "Loop_batch_loop_proc_U0_m_axi_mem_ARREGION");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_ARUSER, "Loop_batch_loop_proc_U0_m_axi_mem_ARUSER");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_RREADY, "Loop_batch_loop_proc_U0_m_axi_mem_RREADY");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_m_axi_mem_BREADY, "Loop_batch_loop_proc_U0_m_axi_mem_BREADY");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_k_read, "Loop_batch_loop_proc_U0_k_read");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_s_read, "Loop_batch_loop_proc_U0_s_read");
    sc_trace(mVcdFile, id_channel_full_n, "id_channel_full_n");
    sc_trace(mVcdFile, id_channel_dout, "id_channel_dout");
    sc_trace(mVcdFile, id_channel_empty_n, "id_channel_empty_n");
    sc_trace(mVcdFile, od_channel_full_n, "od_channel_full_n");
    sc_trace(mVcdFile, od_channel_dout, "od_channel_dout");
    sc_trace(mVcdFile, od_channel_empty_n, "od_channel_empty_n");
    sc_trace(mVcdFile, k_channel_full_n, "k_channel_full_n");
    sc_trace(mVcdFile, k_channel_dout, "k_channel_dout");
    sc_trace(mVcdFile, k_channel_empty_n, "k_channel_empty_n");
    sc_trace(mVcdFile, b_channel_full_n, "b_channel_full_n");
    sc_trace(mVcdFile, b_channel_dout, "b_channel_dout");
    sc_trace(mVcdFile, b_channel_empty_n, "b_channel_empty_n");
    sc_trace(mVcdFile, ox_channel_full_n, "ox_channel_full_n");
    sc_trace(mVcdFile, ox_channel_dout, "ox_channel_dout");
    sc_trace(mVcdFile, ox_channel_empty_n, "ox_channel_empty_n");
    sc_trace(mVcdFile, oy_channel_full_n, "oy_channel_full_n");
    sc_trace(mVcdFile, oy_channel_dout, "oy_channel_dout");
    sc_trace(mVcdFile, oy_channel_empty_n, "oy_channel_empty_n");
    sc_trace(mVcdFile, ix_channel_full_n, "ix_channel_full_n");
    sc_trace(mVcdFile, ix_channel_dout, "ix_channel_dout");
    sc_trace(mVcdFile, ix_channel_empty_n, "ix_channel_empty_n");
    sc_trace(mVcdFile, iy_channel_full_n, "iy_channel_full_n");
    sc_trace(mVcdFile, iy_channel_dout, "iy_channel_dout");
    sc_trace(mVcdFile, iy_channel_empty_n, "iy_channel_empty_n");
    sc_trace(mVcdFile, s_channel_full_n, "s_channel_full_n");
    sc_trace(mVcdFile, s_channel_dout, "s_channel_dout");
    sc_trace(mVcdFile, s_channel_empty_n, "s_channel_empty_n");
    sc_trace(mVcdFile, tmp_4_loc_channel_dout, "tmp_4_loc_channel_dout");
    sc_trace(mVcdFile, tmp_4_loc_channel_empty_n, "tmp_4_loc_channel_empty_n");
    sc_trace(mVcdFile, tmp_3_loc_channel_dout, "tmp_3_loc_channel_dout");
    sc_trace(mVcdFile, tmp_3_loc_channel_empty_n, "tmp_3_loc_channel_empty_n");
    sc_trace(mVcdFile, tmp_5_loc_channel_dout, "tmp_5_loc_channel_dout");
    sc_trace(mVcdFile, tmp_5_loc_channel_empty_n, "tmp_5_loc_channel_empty_n");
    sc_trace(mVcdFile, tmp_7_loc_channel_dout, "tmp_7_loc_channel_dout");
    sc_trace(mVcdFile, tmp_7_loc_channel_empty_n, "tmp_7_loc_channel_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready, "ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Loop_batch_loop_proc_U0_ap_ready, "ap_sync_Loop_batch_loop_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_ap_ready_count, "Loop_batch_loop_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Block_proc4_U0_ap_ready, "ap_sync_reg_Block_proc4_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_proc4_U0_ap_ready, "ap_sync_Block_proc4_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc4_U0_ap_ready_count, "Block_proc4_U0_ap_ready_count");
    sc_trace(mVcdFile, Block_proc4_U0_start_full_n, "Block_proc4_U0_start_full_n");
    sc_trace(mVcdFile, Block_proc4_U0_start_write, "Block_proc4_U0_start_write");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_start_full_n, "Loop_batch_loop_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_batch_loop_proc_U0_start_write, "Loop_batch_loop_proc_U0_start_write");
#endif

    }
    mHdltvinHandle.open("conv_layer.hdltvin.dat");
    mHdltvoutHandle.open("conv_layer.hdltvout.dat");
}

conv_layer::~conv_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete conv_layer_CTRL_BUS_s_axi_U;
    delete conv_layer_mem_m_axi_U;
    delete Block_proc4_U0;
    delete Loop_batch_loop_proc_U0;
    delete id_channel_U;
    delete od_channel_U;
    delete k_channel_U;
    delete b_channel_U;
    delete ox_channel_U;
    delete oy_channel_U;
    delete ix_channel_U;
    delete iy_channel_U;
    delete s_channel_U;
    delete tmp_4_loc_channel_U;
    delete tmp_3_loc_channel_U;
    delete tmp_5_loc_channel_U;
    delete tmp_7_loc_channel_U;
}

void conv_layer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv_layer::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(Block_proc4_U0_ap_ready.read(), ap_const_logic_0))) {
        Block_proc4_U0_ap_ready_count = (!Block_proc4_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc4_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Block_proc4_U0_ap_ready.read()))) {
        Block_proc4_U0_ap_ready_count = (!Block_proc4_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc4_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, Loop_batch_loop_proc_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        Loop_batch_loop_proc_U0_ap_ready_count = (!Loop_batch_loop_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_batch_loop_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, Loop_batch_loop_proc_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        Loop_batch_loop_proc_U0_ap_ready_count = (!Loop_batch_loop_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_batch_loop_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Block_proc4_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_proc4_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_proc4_U0_ap_ready = ap_sync_Block_proc4_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready = ap_sync_Loop_batch_loop_proc_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_tmp_3_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_proc4_U0_ap_done.read() & 
             Block_proc4_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_tmp_3_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_tmp_3_loc_channel = ap_sync_channel_write_tmp_3_loc_channel.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_tmp_4_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_proc4_U0_ap_done.read() & 
             Block_proc4_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_tmp_4_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_tmp_4_loc_channel = ap_sync_channel_write_tmp_4_loc_channel.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_tmp_5_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_proc4_U0_ap_done.read() & 
             Block_proc4_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_tmp_5_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_tmp_5_loc_channel = ap_sync_channel_write_tmp_5_loc_channel.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_tmp_7_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_proc4_U0_ap_done.read() & 
             Block_proc4_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_tmp_7_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_tmp_7_loc_channel = ap_sync_channel_write_tmp_7_loc_channel.read();
        }
    }
}

void conv_layer::thread_Block_proc4_U0_ap_continue() {
    Block_proc4_U0_ap_continue = (ap_sync_channel_write_tmp_7_loc_channel.read() & ap_sync_channel_write_tmp_5_loc_channel.read() & ap_sync_channel_write_tmp_3_loc_channel.read() & ap_sync_channel_write_tmp_4_loc_channel.read());
}

void conv_layer::thread_Block_proc4_U0_ap_start() {
    Block_proc4_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_proc4_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_Block_proc4_U0_start_full_n() {
    Block_proc4_U0_start_full_n = ap_const_logic_0;
}

void conv_layer::thread_Block_proc4_U0_start_write() {
    Block_proc4_U0_start_write = ap_const_logic_0;
}

void conv_layer::thread_Loop_batch_loop_proc_U0_ap_continue() {
    Loop_batch_loop_proc_U0_ap_continue = ap_const_logic_1;
}

void conv_layer::thread_Loop_batch_loop_proc_U0_ap_start() {
    Loop_batch_loop_proc_U0_ap_start = (ap_start.read() & tmp_4_loc_channel_empty_n.read() & tmp_3_loc_channel_empty_n.read() & tmp_5_loc_channel_empty_n.read() & tmp_7_loc_channel_empty_n.read() & (ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_Loop_batch_loop_proc_U0_start_full_n() {
    Loop_batch_loop_proc_U0_start_full_n = ap_const_logic_0;
}

void conv_layer::thread_Loop_batch_loop_proc_U0_start_write() {
    Loop_batch_loop_proc_U0_start_write = ap_const_logic_0;
}

void conv_layer::thread_ap_channel_done_tmp_3_loc_channel() {
    ap_channel_done_tmp_3_loc_channel = (Block_proc4_U0_ap_done.read() & (ap_sync_reg_channel_write_tmp_3_loc_channel.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_ap_channel_done_tmp_4_loc_channel() {
    ap_channel_done_tmp_4_loc_channel = (Block_proc4_U0_ap_done.read() & (ap_sync_reg_channel_write_tmp_4_loc_channel.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_ap_channel_done_tmp_5_loc_channel() {
    ap_channel_done_tmp_5_loc_channel = (Block_proc4_U0_ap_done.read() & (ap_sync_reg_channel_write_tmp_5_loc_channel.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_ap_channel_done_tmp_7_loc_channel() {
    ap_channel_done_tmp_7_loc_channel = (Block_proc4_U0_ap_done.read() & (ap_sync_reg_channel_write_tmp_7_loc_channel.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_ap_done() {
    ap_done = Loop_batch_loop_proc_U0_ap_done.read();
}

void conv_layer::thread_ap_idle() {
    ap_idle = (Block_proc4_U0_ap_idle.read() & Loop_batch_loop_proc_U0_ap_idle.read() & (tmp_4_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (tmp_3_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (tmp_5_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (tmp_7_loc_channel_empty_n.read() ^ 
  ap_const_logic_1));
}

void conv_layer::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void conv_layer::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void conv_layer::thread_ap_sync_Block_proc4_U0_ap_ready() {
    ap_sync_Block_proc4_U0_ap_ready = (Block_proc4_U0_ap_ready.read() | ap_sync_reg_Block_proc4_U0_ap_ready.read());
}

void conv_layer::thread_ap_sync_Loop_batch_loop_proc_U0_ap_ready() {
    ap_sync_Loop_batch_loop_proc_U0_ap_ready = (Loop_batch_loop_proc_U0_ap_ready.read() | ap_sync_reg_Loop_batch_loop_proc_U0_ap_ready.read());
}

void conv_layer::thread_ap_sync_channel_write_tmp_3_loc_channel() {
    ap_sync_channel_write_tmp_3_loc_channel = ((ap_channel_done_tmp_3_loc_channel.read() & 
  tmp_3_loc_channel_full_n.read()) | ap_sync_reg_channel_write_tmp_3_loc_channel.read());
}

void conv_layer::thread_ap_sync_channel_write_tmp_4_loc_channel() {
    ap_sync_channel_write_tmp_4_loc_channel = ((ap_channel_done_tmp_4_loc_channel.read() & 
  tmp_4_loc_channel_full_n.read()) | ap_sync_reg_channel_write_tmp_4_loc_channel.read());
}

void conv_layer::thread_ap_sync_channel_write_tmp_5_loc_channel() {
    ap_sync_channel_write_tmp_5_loc_channel = ((ap_channel_done_tmp_5_loc_channel.read() & 
  tmp_5_loc_channel_full_n.read()) | ap_sync_reg_channel_write_tmp_5_loc_channel.read());
}

void conv_layer::thread_ap_sync_channel_write_tmp_7_loc_channel() {
    ap_sync_channel_write_tmp_7_loc_channel = ((ap_channel_done_tmp_7_loc_channel.read() & 
  tmp_7_loc_channel_full_n.read()) | ap_sync_reg_channel_write_tmp_7_loc_channel.read());
}

void conv_layer::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void conv_layer::thread_ap_sync_done() {
    ap_sync_done = Loop_batch_loop_proc_U0_ap_done.read();
}

void conv_layer::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_Loop_batch_loop_proc_U0_ap_ready.read() & ap_sync_Block_proc4_U0_ap_ready.read());
}

void conv_layer::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWVALID\" :  \"" << m_axi_mem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_AWREADY\" :  \"" << m_axi_mem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWADDR\" :  \"" << m_axi_mem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWID\" :  \"" << m_axi_mem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWLEN\" :  \"" << m_axi_mem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWSIZE\" :  \"" << m_axi_mem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWBURST\" :  \"" << m_axi_mem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWLOCK\" :  \"" << m_axi_mem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWCACHE\" :  \"" << m_axi_mem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWPROT\" :  \"" << m_axi_mem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWQOS\" :  \"" << m_axi_mem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWREGION\" :  \"" << m_axi_mem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWUSER\" :  \"" << m_axi_mem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WVALID\" :  \"" << m_axi_mem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_WREADY\" :  \"" << m_axi_mem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WDATA\" :  \"" << m_axi_mem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WSTRB\" :  \"" << m_axi_mem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WLAST\" :  \"" << m_axi_mem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WID\" :  \"" << m_axi_mem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WUSER\" :  \"" << m_axi_mem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARVALID\" :  \"" << m_axi_mem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_ARREADY\" :  \"" << m_axi_mem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARADDR\" :  \"" << m_axi_mem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARID\" :  \"" << m_axi_mem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARLEN\" :  \"" << m_axi_mem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARSIZE\" :  \"" << m_axi_mem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARBURST\" :  \"" << m_axi_mem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARLOCK\" :  \"" << m_axi_mem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARCACHE\" :  \"" << m_axi_mem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARPROT\" :  \"" << m_axi_mem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARQOS\" :  \"" << m_axi_mem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARREGION\" :  \"" << m_axi_mem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARUSER\" :  \"" << m_axi_mem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RVALID\" :  \"" << m_axi_mem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_RREADY\" :  \"" << m_axi_mem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RDATA\" :  \"" << m_axi_mem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RLAST\" :  \"" << m_axi_mem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RID\" :  \"" << m_axi_mem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RUSER\" :  \"" << m_axi_mem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RRESP\" :  \"" << m_axi_mem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BVALID\" :  \"" << m_axi_mem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_BREADY\" :  \"" << m_axi_mem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BRESP\" :  \"" << m_axi_mem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BID\" :  \"" << m_axi_mem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BUSER\" :  \"" << m_axi_mem_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


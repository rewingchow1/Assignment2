// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_batch_loop_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_batch_loop_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_batch_loop_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state1 = "1";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state2 = "10";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state3 = "100";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state4 = "1000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state5 = "10000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state6 = "100000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state7 = "1000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state8 = "10000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state9 = "100000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state12 = "100000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage0 = "100000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage1 = "1000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage2 = "10000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage3 = "100000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage4 = "1000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage5 = "10000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage6 = "100000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage7 = "1000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_pp0_stage8 = "10000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state39 = "100000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state40 = "1000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state41 = "10000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state42 = "100000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state43 = "1000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state44 = "10000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state45 = "100000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state46 = "1000000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state47 = "10000000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state48 = "100000000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state49 = "1000000000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state50 = "10000000000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state51 = "100000000000000000000000000000000000";
const sc_lv<37> Loop_batch_loop_proc::ap_ST_fsm_state52 = "1000000000000000000000000000000000000";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_batch_loop_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_5 = "101";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_C = "1100";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_18 = "11000";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_19 = "11001";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_1E = "11110";
const sc_lv<1> Loop_batch_loop_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_F = "1111";
const bool Loop_batch_loop_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_batch_loop_proc::ap_const_lv1_1 = "1";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_16 = "10110";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_10 = "10000";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_E = "1110";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_1F = "11111";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_20 = "100000";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_1 = "1";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_7 = "111";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_B = "1011";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_D = "1101";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_13 = "10011";
const sc_lv<64> Loop_batch_loop_proc::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> Loop_batch_loop_proc::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<3> Loop_batch_loop_proc::ap_const_lv3_0 = "000";
const sc_lv<2> Loop_batch_loop_proc::ap_const_lv2_0 = "00";
const sc_lv<4> Loop_batch_loop_proc::ap_const_lv4_0 = "0000";
const sc_lv<4> Loop_batch_loop_proc::ap_const_lv4_F = "1111";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_14 = "10100";
const sc_lv<64> Loop_batch_loop_proc::ap_const_lv64_1 = "1";
const sc_lv<31> Loop_batch_loop_proc::ap_const_lv31_1 = "1";
const sc_lv<8> Loop_batch_loop_proc::ap_const_lv8_FF = "11111111";
const sc_lv<23> Loop_batch_loop_proc::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_15 = "10101";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_11 = "10001";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_12 = "10010";
const sc_lv<5> Loop_batch_loop_proc::ap_const_lv5_2 = "10";
const sc_lv<32> Loop_batch_loop_proc::ap_const_lv32_6 = "110";

Loop_batch_loop_proc::Loop_batch_loop_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc_layer_fadd_32ncud_U11 = new fc_layer_fadd_32ncud<1,9,32,32,32>("fc_layer_fadd_32ncud_U11");
    fc_layer_fadd_32ncud_U11->clk(ap_clk);
    fc_layer_fadd_32ncud_U11->reset(ap_rst);
    fc_layer_fadd_32ncud_U11->din0(tmp_18_i_i_reg_196);
    fc_layer_fadd_32ncud_U11->din1(tmp_27_i_i_reg_641);
    fc_layer_fadd_32ncud_U11->ce(grp_fu_218_ce);
    fc_layer_fadd_32ncud_U11->dout(grp_fu_218_p2);
    fc_layer_fmul_32ndEe_U12 = new fc_layer_fmul_32ndEe<1,5,32,32,32>("fc_layer_fmul_32ndEe_U12");
    fc_layer_fmul_32ndEe_U12->clk(ap_clk);
    fc_layer_fmul_32ndEe_U12->reset(ap_rst);
    fc_layer_fmul_32ndEe_U12->din0(input_element_reg_631);
    fc_layer_fmul_32ndEe_U12->din1(weight_element_reg_636);
    fc_layer_fmul_32ndEe_U12->ce(grp_fu_223_ce);
    fc_layer_fmul_32ndEe_U12->dout(grp_fu_223_p2);
    fc_layer_fcmp_32neOg_U13 = new fc_layer_fcmp_32neOg<1,2,32,32,1>("fc_layer_fcmp_32neOg_U13");
    fc_layer_fcmp_32neOg_U13->clk(ap_clk);
    fc_layer_fcmp_32neOg_U13->reset(ap_rst);
    fc_layer_fcmp_32neOg_U13->din0(tmp_18_i_i_reg_196);
    fc_layer_fcmp_32neOg_U13->din1(ap_var_for_const0);
    fc_layer_fcmp_32neOg_U13->ce(grp_fu_227_ce);
    fc_layer_fcmp_32neOg_U13->opcode(ap_var_for_const1);
    fc_layer_fcmp_32neOg_U13->dout(grp_fu_227_p2);
    fc_layer_mul_32nsfYi_U14 = new fc_layer_mul_32nsfYi<1,3,32,32,64>("fc_layer_mul_32nsfYi_U14");
    fc_layer_mul_32nsfYi_U14->clk(ap_clk);
    fc_layer_mul_32nsfYi_U14->reset(ap_rst);
    fc_layer_mul_32nsfYi_U14->din0(grp_fu_254_p0);
    fc_layer_mul_32nsfYi_U14->din1(grp_fu_254_p1);
    fc_layer_mul_32nsfYi_U14->ce(ap_var_for_const2);
    fc_layer_mul_32nsfYi_U14->dout(grp_fu_254_p2);
    fc_layer_mul_32s_g8j_U15 = new fc_layer_mul_32s_g8j<1,3,32,31,32>("fc_layer_mul_32s_g8j_U15");
    fc_layer_mul_32s_g8j_U15->clk(ap_clk);
    fc_layer_mul_32s_g8j_U15->reset(ap_rst);
    fc_layer_mul_32s_g8j_U15->din0(num_outputs_read_reg_488);
    fc_layer_mul_32s_g8j_U15->din1(grp_fu_331_p1);
    fc_layer_mul_32s_g8j_U15->ce(grp_fu_331_ce);
    fc_layer_mul_32s_g8j_U15->dout(grp_fu_331_p2);
    fc_layer_mul_32s_g8j_U16 = new fc_layer_mul_32s_g8j<1,3,32,31,32>("fc_layer_mul_32s_g8j_U16");
    fc_layer_mul_32s_g8j_U16->clk(ap_clk);
    fc_layer_mul_32s_g8j_U16->reset(ap_rst);
    fc_layer_mul_32s_g8j_U16->din0(num_inputs_read_reg_495);
    fc_layer_mul_32s_g8j_U16->din1(grp_fu_344_p1);
    fc_layer_mul_32s_g8j_U16->ce(grp_fu_344_ce);
    fc_layer_mul_32s_g8j_U16->dout(grp_fu_344_p2);
    fc_layer_mul_32s_g8j_U17 = new fc_layer_mul_32s_g8j<1,3,32,31,32>("fc_layer_mul_32s_g8j_U17");
    fc_layer_mul_32s_g8j_U17->clk(ap_clk);
    fc_layer_mul_32s_g8j_U17->reset(ap_rst);
    fc_layer_mul_32s_g8j_U17->din0(num_inputs_read_reg_495);
    fc_layer_mul_32s_g8j_U17->din1(grp_fu_351_p1);
    fc_layer_mul_32s_g8j_U17->ce(grp_fu_351_ce);
    fc_layer_mul_32s_g8j_U17->dout(grp_fu_351_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00001001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state16_io );

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state16_io );

    SC_METHOD(thread_ap_block_pp0_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00001001);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state17_io );

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state17_io );

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage7_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage7_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage8_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage8_flag00011001);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );

    SC_METHOD(thread_ap_block_pp0_stage8_flag00011011);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( batch_size_empty_n );
    sensitive << ( num_outputs_empty_n );
    sensitive << ( num_inputs_empty_n );

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state16_io);
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_ARREADY );

    SC_METHOD(thread_ap_block_state16_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state17_io);
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_ARREADY );

    SC_METHOD(thread_ap_block_state17_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state18_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state19_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state20_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state21_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state22_pp0_stage7_iter0);

    SC_METHOD(thread_ap_block_state23_pp0_stage8_iter0);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( tmp_19_i_i_reg_610 );

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( tmp_19_i_i_reg_610 );

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state26_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state27_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state28_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state29_pp0_stage5_iter1);

    SC_METHOD(thread_ap_block_state30_pp0_stage6_iter1);

    SC_METHOD(thread_ap_block_state31_pp0_stage7_iter1);

    SC_METHOD(thread_ap_block_state32_pp0_stage8_iter1);

    SC_METHOD(thread_ap_block_state33_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state34_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state35_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state36_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state37_pp0_stage4_iter2);

    SC_METHOD(thread_ap_block_state38_pp0_stage5_iter2);

    SC_METHOD(thread_ap_block_state46);
    sensitive << ( m_axi_mem_BVALID );
    sensitive << ( p_read1 );

    SC_METHOD(thread_ap_condition_477);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_block_pp0_stage1_flag00001001 );

    SC_METHOD(thread_ap_condition_499);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00001001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state15);
    sensitive << ( tmp_19_i_i_fu_368_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_flatten_fu_275_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_flatten_fu_275_p2 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_mem_ARREADY);
    sensitive << ( m_axi_mem_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_mem_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_mem_AWREADY);
    sensitive << ( m_axi_mem_AWREADY );
    sensitive << ( ap_reg_ioackin_m_axi_mem_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_mem_WREADY);
    sensitive << ( m_axi_mem_WREADY );
    sensitive << ( ap_reg_ioackin_m_axi_mem_WREADY );

    SC_METHOD(thread_b_fu_294_p2);
    sensitive << ( b_i_i_reg_174 );

    SC_METHOD(thread_batch_size_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( batch_size_empty_n );

    SC_METHOD(thread_batch_size_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( batch_size_empty_n );
    sensitive << ( num_outputs_empty_n );
    sensitive << ( num_inputs_empty_n );

    SC_METHOD(thread_exitcond_flatten_fu_275_p2);
    sensitive << ( bound_reg_538 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( indvar_flatten_reg_163 );

    SC_METHOD(thread_grp_fu_218_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage8_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_flag00011001 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage3_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );

    SC_METHOD(thread_grp_fu_223_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_block_pp0_stage3_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );

    SC_METHOD(thread_grp_fu_227_ce);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_AWREADY );

    SC_METHOD(thread_grp_fu_233_p2);
    sensitive << ( tmp_13_i_i_reg_563 );
    sensitive << ( tmp_11_i_i_mid2_reg_585 );

    SC_METHOD(thread_grp_fu_254_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_254_p00 );

    SC_METHOD(thread_grp_fu_254_p00);
    sensitive << ( num_outputs_read_reg_488 );

    SC_METHOD(thread_grp_fu_254_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_254_p10 );

    SC_METHOD(thread_grp_fu_254_p10);
    sensitive << ( batch_size_read_reg_483 );

    SC_METHOD(thread_grp_fu_331_ce);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_ARREADY );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_331_p1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_fu_331_p10 );

    SC_METHOD(thread_grp_fu_331_p10);
    sensitive << ( tmp_9_i_i_cast_mid2_s_reg_557 );

    SC_METHOD(thread_grp_fu_344_ce);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_344_p1);
    sensitive << ( tmp_9_i_i_cast_mid2_1_reg_574 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_351_ce);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_351_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_351_p10 );

    SC_METHOD(thread_grp_fu_351_p10);
    sensitive << ( o_i_i_mid2_reg_551 );

    SC_METHOD(thread_i_cast_i_i_fu_364_p1);
    sensitive << ( i_i_i_phi_fu_211_p4 );

    SC_METHOD(thread_i_fu_373_p2);
    sensitive << ( i_i_i_phi_fu_211_p4 );

    SC_METHOD(thread_i_i_i_phi_fu_211_p4);
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( i_i_i_reg_207 );
    sensitive << ( i_reg_614 );

    SC_METHOD(thread_indvar_flatten_next_fu_280_p2);
    sensitive << ( indvar_flatten_reg_163 );

    SC_METHOD(thread_m_axi_mem_ARADDR);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( mem_addr_reg_568 );
    sensitive << ( mem_addr_1_reg_619 );
    sensitive << ( mem_addr_2_reg_625 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_ARREADY );
    sensitive << ( ap_condition_477 );
    sensitive << ( ap_condition_499 );

    SC_METHOD(thread_m_axi_mem_ARBURST);

    SC_METHOD(thread_m_axi_mem_ARCACHE);

    SC_METHOD(thread_m_axi_mem_ARID);

    SC_METHOD(thread_m_axi_mem_ARLEN);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_ARREADY );
    sensitive << ( ap_block_pp0_stage1_flag00001001 );
    sensitive << ( ap_block_pp0_stage2_flag00001001 );

    SC_METHOD(thread_m_axi_mem_ARLOCK);

    SC_METHOD(thread_m_axi_mem_ARPROT);

    SC_METHOD(thread_m_axi_mem_ARQOS);

    SC_METHOD(thread_m_axi_mem_ARREGION);

    SC_METHOD(thread_m_axi_mem_ARSIZE);

    SC_METHOD(thread_m_axi_mem_ARUSER);

    SC_METHOD(thread_m_axi_mem_ARVALID);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_ARREADY );
    sensitive << ( ap_block_pp0_stage1_flag00001001 );
    sensitive << ( ap_block_pp0_stage2_flag00001001 );

    SC_METHOD(thread_m_axi_mem_AWADDR);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( reg_243 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_AWREADY );

    SC_METHOD(thread_m_axi_mem_AWBURST);

    SC_METHOD(thread_m_axi_mem_AWCACHE);

    SC_METHOD(thread_m_axi_mem_AWID);

    SC_METHOD(thread_m_axi_mem_AWLEN);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_AWREADY );

    SC_METHOD(thread_m_axi_mem_AWLOCK);

    SC_METHOD(thread_m_axi_mem_AWPROT);

    SC_METHOD(thread_m_axi_mem_AWQOS);

    SC_METHOD(thread_m_axi_mem_AWREGION);

    SC_METHOD(thread_m_axi_mem_AWSIZE);

    SC_METHOD(thread_m_axi_mem_AWUSER);

    SC_METHOD(thread_m_axi_mem_AWVALID);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_AWREADY );

    SC_METHOD(thread_m_axi_mem_BREADY);
    sensitive << ( m_axi_mem_BVALID );
    sensitive << ( p_read1 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_m_axi_mem_RREADY);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage8_flag00011001 );

    SC_METHOD(thread_m_axi_mem_WDATA);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( tmp_18_i_i_reg_196 );
    sensitive << ( tmp_30_i_i_reg_651 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_WREADY );

    SC_METHOD(thread_m_axi_mem_WID);

    SC_METHOD(thread_m_axi_mem_WLAST);

    SC_METHOD(thread_m_axi_mem_WSTRB);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_WREADY );

    SC_METHOD(thread_m_axi_mem_WUSER);

    SC_METHOD(thread_m_axi_mem_WVALID);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_reg_ioackin_m_axi_mem_WREADY );

    SC_METHOD(thread_mem_blk_n_AR);
    sensitive << ( m_axi_mem_ARREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );

    SC_METHOD(thread_mem_blk_n_AW);
    sensitive << ( m_axi_mem_AWREADY );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_mem_blk_n_B);
    sensitive << ( m_axi_mem_BVALID );
    sensitive << ( p_read1 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_mem_blk_n_R);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_i_i_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_mem_blk_n_W);
    sensitive << ( m_axi_mem_WREADY );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_notlhs_fu_446_p2);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_AWREADY );
    sensitive << ( tmp_1_fu_432_p4 );

    SC_METHOD(thread_notrhs_fu_452_p2);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_AWREADY );
    sensitive << ( tmp_2_fu_442_p1 );

    SC_METHOD(thread_num_inputs_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( num_inputs_empty_n );

    SC_METHOD(thread_num_inputs_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( batch_size_empty_n );
    sensitive << ( num_outputs_empty_n );
    sensitive << ( num_inputs_empty_n );

    SC_METHOD(thread_num_outputs_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( num_outputs_empty_n );

    SC_METHOD(thread_num_outputs_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( batch_size_empty_n );
    sensitive << ( num_outputs_empty_n );
    sensitive << ( num_inputs_empty_n );

    SC_METHOD(thread_o_cast_i_i_fu_266_p1);
    sensitive << ( o_i_i_reg_185 );

    SC_METHOD(thread_o_fu_478_p2);
    sensitive << ( o_i_i_mid2_reg_551 );

    SC_METHOD(thread_o_i_i_mid2_fu_286_p3);
    sensitive << ( o_i_i_reg_185 );
    sensitive << ( tmp_12_i_i_fu_270_p2 );

    SC_METHOD(thread_tmp5_fu_260_p2);
    sensitive << ( p_read3 );
    sensitive << ( p_read4 );

    SC_METHOD(thread_tmp6_fu_392_p2);
    sensitive << ( p_read2 );
    sensitive << ( tmp7_cast_fu_388_p1 );

    SC_METHOD(thread_tmp7_cast_fu_388_p1);
    sensitive << ( tmp7_fu_383_p2 );

    SC_METHOD(thread_tmp7_fu_383_p2);
    sensitive << ( tmp_9_i_i_cast_mid2_reg_600 );
    sensitive << ( tmp_20_i_i_cast_fu_379_p1 );

    SC_METHOD(thread_tmp8_cast_fu_413_p1);
    sensitive << ( tmp8_fu_408_p2 );

    SC_METHOD(thread_tmp8_fu_408_p2);
    sensitive << ( tmp_17_i_i_cast_reg_605 );
    sensitive << ( tmp_20_i_i_cast_fu_379_p1 );

    SC_METHOD(thread_tmp_11_i_i_mid2_fu_339_p2);
    sensitive << ( p_read );
    sensitive << ( tmp_11_i_i_mid2_v_fu_336_p1 );

    SC_METHOD(thread_tmp_11_i_i_mid2_v_fu_336_p1);
    sensitive << ( tmp_11_i_i_mid2_v_v_reg_580 );

    SC_METHOD(thread_tmp_12_i_i_fu_270_p2);
    sensitive << ( num_outputs_read_reg_488 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( o_cast_i_i_fu_266_p1 );

    SC_METHOD(thread_tmp_13_i_i_fu_308_p1);
    sensitive << ( o_i_i_mid2_fu_286_p3 );

    SC_METHOD(thread_tmp_15_i_i_fu_317_p2);
    sensitive << ( p_read3 );
    sensitive << ( tmp_fu_312_p2 );

    SC_METHOD(thread_tmp_17_i_i_cast_fu_360_p1);
    sensitive << ( grp_fu_351_p2 );

    SC_METHOD(thread_tmp_18_i_i_to_int_fu_428_p1);
    sensitive << ( tmp_18_i_i_reg_196 );

    SC_METHOD(thread_tmp_19_i_i_fu_368_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( num_inputs_read_reg_495 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( i_cast_i_i_fu_364_p1 );

    SC_METHOD(thread_tmp_1_fu_432_p4);
    sensitive << ( tmp_18_i_i_to_int_fu_428_p1 );

    SC_METHOD(thread_tmp_20_i_i_cast_fu_379_p1);
    sensitive << ( i_i_i_phi_fu_211_p4 );

    SC_METHOD(thread_tmp_24_i_i_fu_397_p2);
    sensitive << ( tmp5_reg_533 );
    sensitive << ( tmp6_fu_392_p2 );

    SC_METHOD(thread_tmp_26_i_i_fu_417_p2);
    sensitive << ( p_read3 );
    sensitive << ( tmp8_cast_fu_413_p1 );

    SC_METHOD(thread_tmp_2_fu_442_p1);
    sensitive << ( tmp_18_i_i_to_int_fu_428_p1 );

    SC_METHOD(thread_tmp_30_i_i_fu_470_p3);
    sensitive << ( tmp_18_i_i_reg_196 );
    sensitive << ( tmp_5_fu_464_p2 );

    SC_METHOD(thread_tmp_3_fu_458_p2);
    sensitive << ( notrhs_fu_452_p2 );
    sensitive << ( notlhs_fu_446_p2 );

    SC_METHOD(thread_tmp_5_fu_464_p2);
    sensitive << ( tmp_3_fu_458_p2 );
    sensitive << ( grp_fu_227_p2 );

    SC_METHOD(thread_tmp_9_i_i_cast_mid2_1_fu_328_p1);
    sensitive << ( tmp_9_i_i_cast_mid2_s_reg_557 );

    SC_METHOD(thread_tmp_9_i_i_cast_mid2_fu_356_p1);
    sensitive << ( grp_fu_344_p2 );

    SC_METHOD(thread_tmp_9_i_i_cast_mid2_s_fu_300_p3);
    sensitive << ( b_i_i_reg_174 );
    sensitive << ( tmp_12_i_i_fu_270_p2 );
    sensitive << ( b_fu_294_p2 );

    SC_METHOD(thread_tmp_fu_312_p2);
    sensitive << ( p_read2 );
    sensitive << ( tmp_13_i_i_fu_308_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( batch_size_empty_n );
    sensitive << ( num_outputs_empty_n );
    sensitive << ( num_inputs_empty_n );
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( m_axi_mem_BVALID );
    sensitive << ( p_read1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_flatten_fu_275_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_ARREADY );
    sensitive << ( tmp_19_i_i_fu_368_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_AWREADY );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage8_flag00011011 );
    sensitive << ( ap_block_pp0_stage5_flag00011011 );
    sensitive << ( ap_sig_ioackin_m_axi_mem_WREADY );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );
    sensitive << ( ap_block_pp0_stage2_flag00011011 );
    sensitive << ( ap_block_pp0_stage3_flag00011011 );
    sensitive << ( ap_block_pp0_stage4_flag00011011 );
    sensitive << ( ap_block_pp0_stage6_flag00011011 );
    sensitive << ( ap_block_pp0_stage7_flag00011011 );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_mem_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_mem_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_mem_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_batch_loop_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, batch_size_dout, "(port)batch_size_dout");
    sc_trace(mVcdFile, batch_size_empty_n, "(port)batch_size_empty_n");
    sc_trace(mVcdFile, batch_size_read, "(port)batch_size_read");
    sc_trace(mVcdFile, num_outputs_dout, "(port)num_outputs_dout");
    sc_trace(mVcdFile, num_outputs_empty_n, "(port)num_outputs_empty_n");
    sc_trace(mVcdFile, num_outputs_read, "(port)num_outputs_read");
    sc_trace(mVcdFile, num_inputs_dout, "(port)num_inputs_dout");
    sc_trace(mVcdFile, num_inputs_empty_n, "(port)num_inputs_empty_n");
    sc_trace(mVcdFile, num_inputs_read, "(port)num_inputs_read");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, m_axi_mem_AWVALID, "(port)m_axi_mem_AWVALID");
    sc_trace(mVcdFile, m_axi_mem_AWREADY, "(port)m_axi_mem_AWREADY");
    sc_trace(mVcdFile, m_axi_mem_AWADDR, "(port)m_axi_mem_AWADDR");
    sc_trace(mVcdFile, m_axi_mem_AWID, "(port)m_axi_mem_AWID");
    sc_trace(mVcdFile, m_axi_mem_AWLEN, "(port)m_axi_mem_AWLEN");
    sc_trace(mVcdFile, m_axi_mem_AWSIZE, "(port)m_axi_mem_AWSIZE");
    sc_trace(mVcdFile, m_axi_mem_AWBURST, "(port)m_axi_mem_AWBURST");
    sc_trace(mVcdFile, m_axi_mem_AWLOCK, "(port)m_axi_mem_AWLOCK");
    sc_trace(mVcdFile, m_axi_mem_AWCACHE, "(port)m_axi_mem_AWCACHE");
    sc_trace(mVcdFile, m_axi_mem_AWPROT, "(port)m_axi_mem_AWPROT");
    sc_trace(mVcdFile, m_axi_mem_AWQOS, "(port)m_axi_mem_AWQOS");
    sc_trace(mVcdFile, m_axi_mem_AWREGION, "(port)m_axi_mem_AWREGION");
    sc_trace(mVcdFile, m_axi_mem_AWUSER, "(port)m_axi_mem_AWUSER");
    sc_trace(mVcdFile, m_axi_mem_WVALID, "(port)m_axi_mem_WVALID");
    sc_trace(mVcdFile, m_axi_mem_WREADY, "(port)m_axi_mem_WREADY");
    sc_trace(mVcdFile, m_axi_mem_WDATA, "(port)m_axi_mem_WDATA");
    sc_trace(mVcdFile, m_axi_mem_WSTRB, "(port)m_axi_mem_WSTRB");
    sc_trace(mVcdFile, m_axi_mem_WLAST, "(port)m_axi_mem_WLAST");
    sc_trace(mVcdFile, m_axi_mem_WID, "(port)m_axi_mem_WID");
    sc_trace(mVcdFile, m_axi_mem_WUSER, "(port)m_axi_mem_WUSER");
    sc_trace(mVcdFile, m_axi_mem_ARVALID, "(port)m_axi_mem_ARVALID");
    sc_trace(mVcdFile, m_axi_mem_ARREADY, "(port)m_axi_mem_ARREADY");
    sc_trace(mVcdFile, m_axi_mem_ARADDR, "(port)m_axi_mem_ARADDR");
    sc_trace(mVcdFile, m_axi_mem_ARID, "(port)m_axi_mem_ARID");
    sc_trace(mVcdFile, m_axi_mem_ARLEN, "(port)m_axi_mem_ARLEN");
    sc_trace(mVcdFile, m_axi_mem_ARSIZE, "(port)m_axi_mem_ARSIZE");
    sc_trace(mVcdFile, m_axi_mem_ARBURST, "(port)m_axi_mem_ARBURST");
    sc_trace(mVcdFile, m_axi_mem_ARLOCK, "(port)m_axi_mem_ARLOCK");
    sc_trace(mVcdFile, m_axi_mem_ARCACHE, "(port)m_axi_mem_ARCACHE");
    sc_trace(mVcdFile, m_axi_mem_ARPROT, "(port)m_axi_mem_ARPROT");
    sc_trace(mVcdFile, m_axi_mem_ARQOS, "(port)m_axi_mem_ARQOS");
    sc_trace(mVcdFile, m_axi_mem_ARREGION, "(port)m_axi_mem_ARREGION");
    sc_trace(mVcdFile, m_axi_mem_ARUSER, "(port)m_axi_mem_ARUSER");
    sc_trace(mVcdFile, m_axi_mem_RVALID, "(port)m_axi_mem_RVALID");
    sc_trace(mVcdFile, m_axi_mem_RREADY, "(port)m_axi_mem_RREADY");
    sc_trace(mVcdFile, m_axi_mem_RDATA, "(port)m_axi_mem_RDATA");
    sc_trace(mVcdFile, m_axi_mem_RLAST, "(port)m_axi_mem_RLAST");
    sc_trace(mVcdFile, m_axi_mem_RID, "(port)m_axi_mem_RID");
    sc_trace(mVcdFile, m_axi_mem_RUSER, "(port)m_axi_mem_RUSER");
    sc_trace(mVcdFile, m_axi_mem_RRESP, "(port)m_axi_mem_RRESP");
    sc_trace(mVcdFile, m_axi_mem_BVALID, "(port)m_axi_mem_BVALID");
    sc_trace(mVcdFile, m_axi_mem_BREADY, "(port)m_axi_mem_BREADY");
    sc_trace(mVcdFile, m_axi_mem_BRESP, "(port)m_axi_mem_BRESP");
    sc_trace(mVcdFile, m_axi_mem_BID, "(port)m_axi_mem_BID");
    sc_trace(mVcdFile, m_axi_mem_BUSER, "(port)m_axi_mem_BUSER");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, batch_size_blk_n, "batch_size_blk_n");
    sc_trace(mVcdFile, num_outputs_blk_n, "num_outputs_blk_n");
    sc_trace(mVcdFile, num_inputs_blk_n, "num_inputs_blk_n");
    sc_trace(mVcdFile, mem_blk_n_AR, "mem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, mem_blk_n_R, "mem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, mem_blk_n_AW, "mem_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, mem_blk_n_W, "mem_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, mem_blk_n_B, "mem_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00000000, "ap_block_pp0_stage1_flag00000000");
    sc_trace(mVcdFile, tmp_19_i_i_reg_610, "tmp_19_i_i_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage8_flag00000000, "ap_block_pp0_stage8_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00000000, "ap_block_pp0_stage2_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, tmp_18_i_i_reg_196, "tmp_18_i_i_reg_196");
    sc_trace(mVcdFile, i_i_i_reg_207, "i_i_i_reg_207");
    sc_trace(mVcdFile, reg_243, "reg_243");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, batch_size_read_reg_483, "batch_size_read_reg_483");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, num_outputs_read_reg_488, "num_outputs_read_reg_488");
    sc_trace(mVcdFile, num_inputs_read_reg_495, "num_inputs_read_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp5_fu_260_p2, "tmp5_fu_260_p2");
    sc_trace(mVcdFile, tmp5_reg_533, "tmp5_reg_533");
    sc_trace(mVcdFile, grp_fu_254_p2, "grp_fu_254_p2");
    sc_trace(mVcdFile, bound_reg_538, "bound_reg_538");
    sc_trace(mVcdFile, indvar_flatten_next_fu_280_p2, "indvar_flatten_next_fu_280_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_546, "indvar_flatten_next_reg_546");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, o_i_i_mid2_fu_286_p3, "o_i_i_mid2_fu_286_p3");
    sc_trace(mVcdFile, o_i_i_mid2_reg_551, "o_i_i_mid2_reg_551");
    sc_trace(mVcdFile, exitcond_flatten_fu_275_p2, "exitcond_flatten_fu_275_p2");
    sc_trace(mVcdFile, tmp_9_i_i_cast_mid2_s_fu_300_p3, "tmp_9_i_i_cast_mid2_s_fu_300_p3");
    sc_trace(mVcdFile, tmp_9_i_i_cast_mid2_s_reg_557, "tmp_9_i_i_cast_mid2_s_reg_557");
    sc_trace(mVcdFile, tmp_13_i_i_fu_308_p1, "tmp_13_i_i_fu_308_p1");
    sc_trace(mVcdFile, tmp_13_i_i_reg_563, "tmp_13_i_i_reg_563");
    sc_trace(mVcdFile, mem_addr_reg_568, "mem_addr_reg_568");
    sc_trace(mVcdFile, tmp_9_i_i_cast_mid2_1_fu_328_p1, "tmp_9_i_i_cast_mid2_1_fu_328_p1");
    sc_trace(mVcdFile, tmp_9_i_i_cast_mid2_1_reg_574, "tmp_9_i_i_cast_mid2_1_reg_574");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_mem_ARREADY, "ap_sig_ioackin_m_axi_mem_ARREADY");
    sc_trace(mVcdFile, grp_fu_331_p2, "grp_fu_331_p2");
    sc_trace(mVcdFile, tmp_11_i_i_mid2_v_v_reg_580, "tmp_11_i_i_mid2_v_v_reg_580");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_11_i_i_mid2_fu_339_p2, "tmp_11_i_i_mid2_fu_339_p2");
    sc_trace(mVcdFile, tmp_11_i_i_mid2_reg_585, "tmp_11_i_i_mid2_reg_585");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, output_element_reg_595, "output_element_reg_595");
    sc_trace(mVcdFile, tmp_9_i_i_cast_mid2_fu_356_p1, "tmp_9_i_i_cast_mid2_fu_356_p1");
    sc_trace(mVcdFile, tmp_9_i_i_cast_mid2_reg_600, "tmp_9_i_i_cast_mid2_reg_600");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_17_i_i_cast_fu_360_p1, "tmp_17_i_i_cast_fu_360_p1");
    sc_trace(mVcdFile, tmp_17_i_i_cast_reg_605, "tmp_17_i_i_cast_reg_605");
    sc_trace(mVcdFile, tmp_19_i_i_fu_368_p2, "tmp_19_i_i_fu_368_p2");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter0, "ap_block_state15_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1, "ap_block_state24_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage0_iter2, "ap_block_state33_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_19_i_i_reg_610, "ap_reg_pp0_iter1_tmp_19_i_i_reg_610");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_19_i_i_reg_610, "ap_reg_pp0_iter2_tmp_19_i_i_reg_610");
    sc_trace(mVcdFile, i_fu_373_p2, "i_fu_373_p2");
    sc_trace(mVcdFile, i_reg_614, "i_reg_614");
    sc_trace(mVcdFile, mem_addr_1_reg_619, "mem_addr_1_reg_619");
    sc_trace(mVcdFile, mem_addr_2_reg_625, "mem_addr_2_reg_625");
    sc_trace(mVcdFile, input_element_reg_631, "input_element_reg_631");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage8_iter0, "ap_block_state23_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage8_iter1, "ap_block_state32_pp0_stage8_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage8_flag00011001, "ap_block_pp0_stage8_flag00011001");
    sc_trace(mVcdFile, weight_element_reg_636, "weight_element_reg_636");
    sc_trace(mVcdFile, grp_fu_223_p2, "grp_fu_223_p2");
    sc_trace(mVcdFile, tmp_27_i_i_reg_641, "tmp_27_i_i_reg_641");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage5_iter0, "ap_block_state20_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage5_iter1, "ap_block_state29_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage5_iter2, "ap_block_state38_pp0_stage5_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011001, "ap_block_pp0_stage5_flag00011001");
    sc_trace(mVcdFile, grp_fu_218_p2, "grp_fu_218_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_30_i_i_fu_470_p3, "tmp_30_i_i_fu_470_p3");
    sc_trace(mVcdFile, tmp_30_i_i_reg_651, "tmp_30_i_i_reg_651");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_mem_AWREADY, "ap_sig_ioackin_m_axi_mem_AWREADY");
    sc_trace(mVcdFile, o_fu_478_p2, "o_fu_478_p2");
    sc_trace(mVcdFile, ap_block_state46, "ap_block_state46");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state15, "ap_condition_pp0_exit_iter0_state15");
    sc_trace(mVcdFile, ap_block_pp0_stage8_flag00011011, "ap_block_pp0_stage8_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011011, "ap_block_pp0_stage5_flag00011011");
    sc_trace(mVcdFile, indvar_flatten_reg_163, "indvar_flatten_reg_163");
    sc_trace(mVcdFile, b_i_i_reg_174, "b_i_i_reg_174");
    sc_trace(mVcdFile, o_i_i_reg_185, "o_i_i_reg_185");
    sc_trace(mVcdFile, i_i_i_phi_fu_211_p4, "i_i_i_phi_fu_211_p4");
    sc_trace(mVcdFile, grp_fu_233_p2, "grp_fu_233_p2");
    sc_trace(mVcdFile, tmp_15_i_i_fu_317_p2, "tmp_15_i_i_fu_317_p2");
    sc_trace(mVcdFile, tmp_24_i_i_fu_397_p2, "tmp_24_i_i_fu_397_p2");
    sc_trace(mVcdFile, tmp_26_i_i_fu_417_p2, "tmp_26_i_i_fu_417_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_mem_ARREADY, "ap_reg_ioackin_m_axi_mem_ARREADY");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage1_iter0, "ap_block_state16_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter1, "ap_block_state25_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage1_iter2, "ap_block_state34_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00001001, "ap_block_pp0_stage1_flag00001001");
    sc_trace(mVcdFile, ap_block_state16_io, "ap_block_state16_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage2_iter0, "ap_block_state17_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage2_iter1, "ap_block_state26_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage2_iter2, "ap_block_state35_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00001001, "ap_block_pp0_stage2_flag00001001");
    sc_trace(mVcdFile, ap_block_state17_io, "ap_block_state17_io");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011001, "ap_block_pp0_stage2_flag00011001");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_mem_AWREADY, "ap_reg_ioackin_m_axi_mem_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_mem_WREADY, "ap_reg_ioackin_m_axi_mem_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_mem_WREADY, "ap_sig_ioackin_m_axi_mem_WREADY");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00000000, "ap_block_pp0_stage6_flag00000000");
    sc_trace(mVcdFile, grp_fu_254_p0, "grp_fu_254_p0");
    sc_trace(mVcdFile, grp_fu_254_p1, "grp_fu_254_p1");
    sc_trace(mVcdFile, o_cast_i_i_fu_266_p1, "o_cast_i_i_fu_266_p1");
    sc_trace(mVcdFile, tmp_12_i_i_fu_270_p2, "tmp_12_i_i_fu_270_p2");
    sc_trace(mVcdFile, b_fu_294_p2, "b_fu_294_p2");
    sc_trace(mVcdFile, tmp_fu_312_p2, "tmp_fu_312_p2");
    sc_trace(mVcdFile, grp_fu_331_p1, "grp_fu_331_p1");
    sc_trace(mVcdFile, tmp_11_i_i_mid2_v_fu_336_p1, "tmp_11_i_i_mid2_v_fu_336_p1");
    sc_trace(mVcdFile, grp_fu_344_p1, "grp_fu_344_p1");
    sc_trace(mVcdFile, grp_fu_351_p1, "grp_fu_351_p1");
    sc_trace(mVcdFile, grp_fu_344_p2, "grp_fu_344_p2");
    sc_trace(mVcdFile, grp_fu_351_p2, "grp_fu_351_p2");
    sc_trace(mVcdFile, i_cast_i_i_fu_364_p1, "i_cast_i_i_fu_364_p1");
    sc_trace(mVcdFile, tmp_20_i_i_cast_fu_379_p1, "tmp_20_i_i_cast_fu_379_p1");
    sc_trace(mVcdFile, tmp7_fu_383_p2, "tmp7_fu_383_p2");
    sc_trace(mVcdFile, tmp7_cast_fu_388_p1, "tmp7_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp6_fu_392_p2, "tmp6_fu_392_p2");
    sc_trace(mVcdFile, tmp8_fu_408_p2, "tmp8_fu_408_p2");
    sc_trace(mVcdFile, tmp8_cast_fu_413_p1, "tmp8_cast_fu_413_p1");
    sc_trace(mVcdFile, tmp_18_i_i_to_int_fu_428_p1, "tmp_18_i_i_to_int_fu_428_p1");
    sc_trace(mVcdFile, tmp_1_fu_432_p4, "tmp_1_fu_432_p4");
    sc_trace(mVcdFile, tmp_2_fu_442_p1, "tmp_2_fu_442_p1");
    sc_trace(mVcdFile, notrhs_fu_452_p2, "notrhs_fu_452_p2");
    sc_trace(mVcdFile, notlhs_fu_446_p2, "notlhs_fu_446_p2");
    sc_trace(mVcdFile, tmp_3_fu_458_p2, "tmp_3_fu_458_p2");
    sc_trace(mVcdFile, grp_fu_227_p2, "grp_fu_227_p2");
    sc_trace(mVcdFile, tmp_5_fu_464_p2, "tmp_5_fu_464_p2");
    sc_trace(mVcdFile, grp_fu_218_ce, "grp_fu_218_ce");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage6_iter0, "ap_block_state21_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage6_iter1, "ap_block_state30_pp0_stage6_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011001, "ap_block_pp0_stage6_flag00011001");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage7_iter0, "ap_block_state22_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage7_iter1, "ap_block_state31_pp0_stage7_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage7_flag00011001, "ap_block_pp0_stage7_flag00011001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage3_iter0, "ap_block_state18_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage3_iter1, "ap_block_state27_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage3_iter2, "ap_block_state36_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011001, "ap_block_pp0_stage3_flag00011001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage4_iter0, "ap_block_state19_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage4_iter1, "ap_block_state28_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage4_iter2, "ap_block_state37_pp0_stage4_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011001, "ap_block_pp0_stage4_flag00011001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, grp_fu_223_ce, "grp_fu_223_ce");
    sc_trace(mVcdFile, grp_fu_227_ce, "grp_fu_227_ce");
    sc_trace(mVcdFile, grp_fu_331_ce, "grp_fu_331_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_344_ce, "grp_fu_344_ce");
    sc_trace(mVcdFile, grp_fu_351_ce, "grp_fu_351_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011011, "ap_block_pp0_stage2_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011011, "ap_block_pp0_stage3_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011011, "ap_block_pp0_stage4_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011011, "ap_block_pp0_stage6_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage7_flag00011011, "ap_block_pp0_stage7_flag00011011");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_254_p00, "grp_fu_254_p00");
    sc_trace(mVcdFile, grp_fu_254_p10, "grp_fu_254_p10");
    sc_trace(mVcdFile, grp_fu_331_p10, "grp_fu_331_p10");
    sc_trace(mVcdFile, grp_fu_351_p10, "grp_fu_351_p10");
    sc_trace(mVcdFile, ap_condition_477, "ap_condition_477");
    sc_trace(mVcdFile, ap_condition_499, "ap_condition_499");
#endif

    }
}

Loop_batch_loop_proc::~Loop_batch_loop_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fc_layer_fadd_32ncud_U11;
    delete fc_layer_fmul_32ndEe_U12;
    delete fc_layer_fcmp_32neOg_U13;
    delete fc_layer_mul_32nsfYi_U14;
    delete fc_layer_mul_32s_g8j_U15;
    delete fc_layer_mul_32s_g8j_U16;
    delete fc_layer_mul_32s_g8j_U17;
}

void Loop_batch_loop_proc::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void Loop_batch_loop_proc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void Loop_batch_loop_proc::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void Loop_batch_loop_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_275_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state15.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00011011.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state15.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state15.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00011011.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_mem_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_m_axi_mem_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00001001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_m_axi_mem_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_mem_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_AWREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_AWREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_m_axi_mem_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_AWREADY.read())))) {
            ap_reg_ioackin_m_axi_mem_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_mem_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_WREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_m_axi_mem_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_mem_WREADY.read())))) {
            ap_reg_ioackin_m_axi_mem_WREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         !((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read()))))) {
        b_i_i_reg_174 = tmp_9_i_i_cast_mid2_s_reg_557.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        b_i_i_reg_174 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        i_i_i_reg_207 = i_reg_614.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_i_i_reg_207 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         !((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read()))))) {
        indvar_flatten_reg_163 = indvar_flatten_next_reg_546.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_flatten_reg_163 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         !((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read()))))) {
        o_i_i_reg_185 = o_fu_478_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        o_i_i_reg_185 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_tmp_19_i_i_reg_610.read()))) {
        tmp_18_i_i_reg_196 = grp_fu_218_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_18_i_i_reg_196 = output_element_reg_595.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_tmp_19_i_i_reg_610 = tmp_19_i_i_reg_610.read();
        ap_reg_pp0_iter2_tmp_19_i_i_reg_610 = ap_reg_pp0_iter1_tmp_19_i_i_reg_610.read();
        tmp_19_i_i_reg_610 = tmp_19_i_i_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, batch_size_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_outputs_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_inputs_empty_n.read())))) {
        batch_size_read_reg_483 = batch_size_dout.read();
        num_inputs_read_reg_495 = num_inputs_dout.read();
        num_outputs_read_reg_488 = num_outputs_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bound_reg_538 = grp_fu_254_p2.read();
        tmp5_reg_533 = tmp5_fu_260_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        i_reg_614 = i_fu_373_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        indvar_flatten_next_reg_546 = indvar_flatten_next_fu_280_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00011001.read(), ap_const_boolean_0))) {
        input_element_reg_631 = m_axi_mem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_i_i_fu_368_p2.read()))) {
        mem_addr_1_reg_619 = tmp_24_i_i_fu_397_p2.read();
        mem_addr_2_reg_625 = tmp_26_i_i_fu_417_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()))) {
        mem_addr_reg_568 = tmp_15_i_i_fu_317_p2.read();
        o_i_i_mid2_reg_551 = o_i_i_mid2_fu_286_p3.read();
        tmp_13_i_i_reg_563 = tmp_13_i_i_fu_308_p1.read();
        tmp_9_i_i_cast_mid2_s_reg_557 = tmp_9_i_i_cast_mid2_s_fu_300_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_mem_RVALID.read(), ap_const_logic_1))) {
        output_element_reg_595 = m_axi_mem_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())))) {
        reg_243 = grp_fu_233_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_11_i_i_mid2_reg_585 = tmp_11_i_i_mid2_fu_339_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_11_i_i_mid2_v_v_reg_580 = grp_fu_331_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_17_i_i_cast_reg_605 = tmp_17_i_i_cast_fu_360_p1.read();
        tmp_9_i_i_cast_mid2_reg_600 = tmp_9_i_i_cast_mid2_fu_356_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_tmp_19_i_i_reg_610.read()))) {
        tmp_27_i_i_reg_641 = grp_fu_223_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_AWREADY.read(), ap_const_logic_1))) {
        tmp_30_i_i_reg_651 = tmp_30_i_i_fu_470_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_ARREADY.read(), ap_const_logic_1))) {
        tmp_9_i_i_cast_mid2_1_reg_574 = tmp_9_i_i_cast_mid2_1_fu_328_p1.read();
    }
    if ((esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        weight_element_reg_636 = m_axi_mem_RDATA.read();
    }
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[14];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[15];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[16];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[17];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[18];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[19];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[20];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[21];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[22];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[23];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[24];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[25];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[30];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[31];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[32];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Loop_batch_loop_proc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_RVALID.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_RVALID.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage1_flag00000000() {
    ap_block_pp0_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage1_flag00001001() {
    ap_block_pp0_stage1_flag00001001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage2_flag00000000() {
    ap_block_pp0_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage2_flag00001001() {
    ap_block_pp0_stage2_flag00001001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage2_flag00011001() {
    ap_block_pp0_stage2_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state17_io.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage2_flag00011011() {
    ap_block_pp0_stage2_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state17_io.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage3_flag00011001() {
    ap_block_pp0_stage3_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage3_flag00011011() {
    ap_block_pp0_stage3_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage4_flag00011001() {
    ap_block_pp0_stage4_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage4_flag00011011() {
    ap_block_pp0_stage4_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage5_flag00011001() {
    ap_block_pp0_stage5_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage5_flag00011011() {
    ap_block_pp0_stage5_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage6_flag00000000() {
    ap_block_pp0_stage6_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage6_flag00011001() {
    ap_block_pp0_stage6_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage6_flag00011011() {
    ap_block_pp0_stage6_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage7_flag00011001() {
    ap_block_pp0_stage7_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage7_flag00011011() {
    ap_block_pp0_stage7_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage8_flag00000000() {
    ap_block_pp0_stage8_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage8_flag00011001() {
    ap_block_pp0_stage8_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_RVALID.read()));
}

void Loop_batch_loop_proc::thread_ap_block_pp0_stage8_flag00011011() {
    ap_block_pp0_stage8_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_RVALID.read()));
}

void Loop_batch_loop_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, batch_size_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_outputs_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_inputs_empty_n.read()));
}

void Loop_batch_loop_proc::thread_ap_block_state15_pp0_stage0_iter0() {
    ap_block_state15_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state16_io() {
    ap_block_state16_io = (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_mem_ARREADY.read()));
}

void Loop_batch_loop_proc::thread_ap_block_state16_pp0_stage1_iter0() {
    ap_block_state16_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state17_io() {
    ap_block_state17_io = (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_mem_ARREADY.read()));
}

void Loop_batch_loop_proc::thread_ap_block_state17_pp0_stage2_iter0() {
    ap_block_state17_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state18_pp0_stage3_iter0() {
    ap_block_state18_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state19_pp0_stage4_iter0() {
    ap_block_state19_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state20_pp0_stage5_iter0() {
    ap_block_state20_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state21_pp0_stage6_iter0() {
    ap_block_state21_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state22_pp0_stage7_iter0() {
    ap_block_state22_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state23_pp0_stage8_iter0() {
    ap_block_state23_pp0_stage8_iter0 = (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_RVALID.read()));
}

void Loop_batch_loop_proc::thread_ap_block_state24_pp0_stage0_iter1() {
    ap_block_state24_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_RVALID.read()));
}

void Loop_batch_loop_proc::thread_ap_block_state25_pp0_stage1_iter1() {
    ap_block_state25_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state26_pp0_stage2_iter1() {
    ap_block_state26_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state27_pp0_stage3_iter1() {
    ap_block_state27_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state28_pp0_stage4_iter1() {
    ap_block_state28_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state29_pp0_stage5_iter1() {
    ap_block_state29_pp0_stage5_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state30_pp0_stage6_iter1() {
    ap_block_state30_pp0_stage6_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state31_pp0_stage7_iter1() {
    ap_block_state31_pp0_stage7_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state32_pp0_stage8_iter1() {
    ap_block_state32_pp0_stage8_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state33_pp0_stage0_iter2() {
    ap_block_state33_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state34_pp0_stage1_iter2() {
    ap_block_state34_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state35_pp0_stage2_iter2() {
    ap_block_state35_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state36_pp0_stage3_iter2() {
    ap_block_state36_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state37_pp0_stage4_iter2() {
    ap_block_state37_pp0_stage4_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state38_pp0_stage5_iter2() {
    ap_block_state38_pp0_stage5_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_batch_loop_proc::thread_ap_block_state46() {
    ap_block_state46 = ((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())));
}

void Loop_batch_loop_proc::thread_ap_condition_477() {
    ap_condition_477 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00001001.read(), ap_const_boolean_0));
}

void Loop_batch_loop_proc::thread_ap_condition_499() {
    ap_condition_499 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00001001.read(), ap_const_boolean_0));
}

void Loop_batch_loop_proc::thread_ap_condition_pp0_exit_iter0_state15() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_i_i_fu_368_p2.read())) {
        ap_condition_pp0_exit_iter0_state15 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state15 = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_275_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_batch_loop_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_batch_loop_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_275_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_ap_sig_ioackin_m_axi_mem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_ARREADY.read())) {
        ap_sig_ioackin_m_axi_mem_ARREADY = m_axi_mem_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_mem_ARREADY = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_ap_sig_ioackin_m_axi_mem_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_AWREADY.read())) {
        ap_sig_ioackin_m_axi_mem_AWREADY = m_axi_mem_AWREADY.read();
    } else {
        ap_sig_ioackin_m_axi_mem_AWREADY = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_ap_sig_ioackin_m_axi_mem_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_WREADY.read())) {
        ap_sig_ioackin_m_axi_mem_WREADY = m_axi_mem_WREADY.read();
    } else {
        ap_sig_ioackin_m_axi_mem_WREADY = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_b_fu_294_p2() {
    b_fu_294_p2 = (!b_i_i_reg_174.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(b_i_i_reg_174.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Loop_batch_loop_proc::thread_batch_size_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        batch_size_blk_n = batch_size_empty_n.read();
    } else {
        batch_size_blk_n = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_batch_size_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, batch_size_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_outputs_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_inputs_empty_n.read())))) {
        batch_size_read = ap_const_logic_1;
    } else {
        batch_size_read = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_exitcond_flatten_fu_275_p2() {
    exitcond_flatten_fu_275_p2 = (!indvar_flatten_reg_163.read().is_01() || !bound_reg_538.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_163.read() == bound_reg_538.read());
}

void Loop_batch_loop_proc::thread_grp_fu_218_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)))) {
        grp_fu_218_ce = ap_const_logic_1;
    } else {
        grp_fu_218_ce = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_grp_fu_223_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)))) {
        grp_fu_223_ce = ap_const_logic_1;
    } else {
        grp_fu_223_ce = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_grp_fu_227_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_AWREADY.read(), ap_const_logic_1)))) {
        grp_fu_227_ce = ap_const_logic_1;
    } else {
        grp_fu_227_ce = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_grp_fu_233_p2() {
    grp_fu_233_p2 = (!tmp_11_i_i_mid2_reg_585.read().is_01() || !tmp_13_i_i_reg_563.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_11_i_i_mid2_reg_585.read()) + sc_biguint<64>(tmp_13_i_i_reg_563.read()));
}

void Loop_batch_loop_proc::thread_grp_fu_254_p0() {
    grp_fu_254_p0 =  (sc_lv<32>) (grp_fu_254_p00.read());
}

void Loop_batch_loop_proc::thread_grp_fu_254_p00() {
    grp_fu_254_p00 = esl_zext<64,32>(num_outputs_read_reg_488.read());
}

void Loop_batch_loop_proc::thread_grp_fu_254_p1() {
    grp_fu_254_p1 =  (sc_lv<32>) (grp_fu_254_p10.read());
}

void Loop_batch_loop_proc::thread_grp_fu_254_p10() {
    grp_fu_254_p10 = esl_zext<64,32>(batch_size_read_reg_483.read());
}

void Loop_batch_loop_proc::thread_grp_fu_331_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_ARREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        grp_fu_331_ce = ap_const_logic_1;
    } else {
        grp_fu_331_ce = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_grp_fu_331_p1() {
    grp_fu_331_p1 =  (sc_lv<31>) (grp_fu_331_p10.read());
}

void Loop_batch_loop_proc::thread_grp_fu_331_p10() {
    grp_fu_331_p10 = esl_zext<32,31>(tmp_9_i_i_cast_mid2_s_reg_557.read());
}

void Loop_batch_loop_proc::thread_grp_fu_344_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(m_axi_mem_RVALID.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        grp_fu_344_ce = ap_const_logic_1;
    } else {
        grp_fu_344_ce = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_grp_fu_344_p1() {
    grp_fu_344_p1 =  (sc_lv<31>) (tmp_9_i_i_cast_mid2_1_reg_574.read());
}

void Loop_batch_loop_proc::thread_grp_fu_351_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(m_axi_mem_RVALID.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        grp_fu_351_ce = ap_const_logic_1;
    } else {
        grp_fu_351_ce = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_grp_fu_351_p1() {
    grp_fu_351_p1 =  (sc_lv<31>) (grp_fu_351_p10.read());
}

void Loop_batch_loop_proc::thread_grp_fu_351_p10() {
    grp_fu_351_p10 = esl_zext<32,31>(o_i_i_mid2_reg_551.read());
}

void Loop_batch_loop_proc::thread_i_cast_i_i_fu_364_p1() {
    i_cast_i_i_fu_364_p1 = esl_zext<32,31>(i_i_i_phi_fu_211_p4.read());
}

void Loop_batch_loop_proc::thread_i_fu_373_p2() {
    i_fu_373_p2 = (!i_i_i_phi_fu_211_p4.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_i_i_phi_fu_211_p4.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Loop_batch_loop_proc::thread_i_i_i_phi_fu_211_p4() {
    if ((esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        i_i_i_phi_fu_211_p4 = i_reg_614.read();
    } else {
        i_i_i_phi_fu_211_p4 = i_i_i_reg_207.read();
    }
}

void Loop_batch_loop_proc::thread_indvar_flatten_next_fu_280_p2() {
    indvar_flatten_next_fu_280_p2 = (!indvar_flatten_reg_163.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_163.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_condition_499.read(), ap_const_boolean_1)) {
            m_axi_mem_ARADDR = mem_addr_2_reg_625.read();
        } else if (esl_seteq<1,1,1>(ap_condition_477.read(), ap_const_boolean_1)) {
            m_axi_mem_ARADDR = mem_addr_1_reg_619.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            m_axi_mem_ARADDR = mem_addr_reg_568.read();
        } else {
            m_axi_mem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        m_axi_mem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARBURST() {
    m_axi_mem_ARBURST = ap_const_lv2_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARCACHE() {
    m_axi_mem_ARCACHE = ap_const_lv4_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARID() {
    m_axi_mem_ARID = ap_const_lv1_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARLEN() {
    m_axi_mem_ARLEN = ap_const_lv32_1;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARLOCK() {
    m_axi_mem_ARLOCK = ap_const_lv2_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARPROT() {
    m_axi_mem_ARPROT = ap_const_lv3_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARQOS() {
    m_axi_mem_ARQOS = ap_const_lv4_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARREGION() {
    m_axi_mem_ARREGION = ap_const_lv4_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARSIZE() {
    m_axi_mem_ARSIZE = ap_const_lv3_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARUSER() {
    m_axi_mem_ARUSER = ap_const_lv1_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00001001.read(), ap_const_boolean_0)))) {
        m_axi_mem_ARVALID = ap_const_logic_1;
    } else {
        m_axi_mem_ARVALID = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWADDR() {
    m_axi_mem_AWADDR = reg_243.read();
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWBURST() {
    m_axi_mem_AWBURST = ap_const_lv2_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWCACHE() {
    m_axi_mem_AWCACHE = ap_const_lv4_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWID() {
    m_axi_mem_AWID = ap_const_lv1_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWLEN() {
    m_axi_mem_AWLEN = ap_const_lv32_1;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWLOCK() {
    m_axi_mem_AWLOCK = ap_const_lv2_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWPROT() {
    m_axi_mem_AWPROT = ap_const_lv3_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWQOS() {
    m_axi_mem_AWQOS = ap_const_lv4_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWREGION() {
    m_axi_mem_AWREGION = ap_const_lv4_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWSIZE() {
    m_axi_mem_AWSIZE = ap_const_lv3_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWUSER() {
    m_axi_mem_AWUSER = ap_const_lv1_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_AWREADY.read())))) {
        m_axi_mem_AWVALID = ap_const_logic_1;
    } else {
        m_axi_mem_AWVALID = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_m_axi_mem_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
          !((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
          !((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())))))) {
        m_axi_mem_BREADY = ap_const_logic_1;
    } else {
        m_axi_mem_BREADY = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_m_axi_mem_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(m_axi_mem_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        m_axi_mem_RREADY = ap_const_logic_1;
    } else {
        m_axi_mem_RREADY = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_m_axi_mem_WDATA() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_WREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
            m_axi_mem_WDATA = tmp_18_i_i_reg_196.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
            m_axi_mem_WDATA = tmp_30_i_i_reg_651.read();
        } else {
            m_axi_mem_WDATA =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        m_axi_mem_WDATA =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Loop_batch_loop_proc::thread_m_axi_mem_WID() {
    m_axi_mem_WID = ap_const_lv1_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_WLAST() {
    m_axi_mem_WLAST = ap_const_logic_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_WSTRB() {
    m_axi_mem_WSTRB = ap_const_lv4_F;
}

void Loop_batch_loop_proc::thread_m_axi_mem_WUSER() {
    m_axi_mem_WUSER = ap_const_lv1_0;
}

void Loop_batch_loop_proc::thread_m_axi_mem_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_mem_WREADY.read())))) {
        m_axi_mem_WVALID = ap_const_logic_1;
    } else {
        m_axi_mem_WVALID = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_mem_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0)))) {
        mem_blk_n_AR = m_axi_mem_ARREADY.read();
    } else {
        mem_blk_n_AR = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_mem_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        mem_blk_n_AW = m_axi_mem_AWREADY.read();
    } else {
        mem_blk_n_AW = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_mem_blk_n_B() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1)))) {
        mem_blk_n_B = m_axi_mem_BVALID.read();
    } else {
        mem_blk_n_B = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_mem_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(tmp_19_i_i_reg_610.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0)))) {
        mem_blk_n_R = m_axi_mem_RVALID.read();
    } else {
        mem_blk_n_R = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_mem_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        mem_blk_n_W = m_axi_mem_WREADY.read();
    } else {
        mem_blk_n_W = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_notlhs_fu_446_p2() {
    notlhs_fu_446_p2 = (!tmp_1_fu_432_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_432_p4.read() != ap_const_lv8_FF);
}

void Loop_batch_loop_proc::thread_notrhs_fu_452_p2() {
    notrhs_fu_452_p2 = (!tmp_2_fu_442_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_442_p1.read() == ap_const_lv23_0);
}

void Loop_batch_loop_proc::thread_num_inputs_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        num_inputs_blk_n = num_inputs_empty_n.read();
    } else {
        num_inputs_blk_n = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_num_inputs_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, batch_size_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_outputs_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_inputs_empty_n.read())))) {
        num_inputs_read = ap_const_logic_1;
    } else {
        num_inputs_read = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_num_outputs_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        num_outputs_blk_n = num_outputs_empty_n.read();
    } else {
        num_outputs_blk_n = ap_const_logic_1;
    }
}

void Loop_batch_loop_proc::thread_num_outputs_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, batch_size_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_outputs_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_inputs_empty_n.read())))) {
        num_outputs_read = ap_const_logic_1;
    } else {
        num_outputs_read = ap_const_logic_0;
    }
}

void Loop_batch_loop_proc::thread_o_cast_i_i_fu_266_p1() {
    o_cast_i_i_fu_266_p1 = esl_zext<32,31>(o_i_i_reg_185.read());
}

void Loop_batch_loop_proc::thread_o_fu_478_p2() {
    o_fu_478_p2 = (!o_i_i_mid2_reg_551.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(o_i_i_mid2_reg_551.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Loop_batch_loop_proc::thread_o_i_i_mid2_fu_286_p3() {
    o_i_i_mid2_fu_286_p3 = (!tmp_12_i_i_fu_270_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_12_i_i_fu_270_p2.read()[0].to_bool())? o_i_i_reg_185.read(): ap_const_lv31_0);
}

void Loop_batch_loop_proc::thread_tmp5_fu_260_p2() {
    tmp5_fu_260_p2 = (!p_read3.read().is_01() || !p_read4.read().is_01())? sc_lv<64>(): (sc_biguint<64>(p_read3.read()) + sc_biguint<64>(p_read4.read()));
}

void Loop_batch_loop_proc::thread_tmp6_fu_392_p2() {
    tmp6_fu_392_p2 = (!tmp7_cast_fu_388_p1.read().is_01() || !p_read2.read().is_01())? sc_lv<64>(): (sc_bigint<64>(tmp7_cast_fu_388_p1.read()) + sc_biguint<64>(p_read2.read()));
}

void Loop_batch_loop_proc::thread_tmp7_cast_fu_388_p1() {
    tmp7_cast_fu_388_p1 = esl_sext<64,33>(tmp7_fu_383_p2.read());
}

void Loop_batch_loop_proc::thread_tmp7_fu_383_p2() {
    tmp7_fu_383_p2 = (!tmp_9_i_i_cast_mid2_reg_600.read().is_01() || !tmp_20_i_i_cast_fu_379_p1.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_9_i_i_cast_mid2_reg_600.read()) + sc_biguint<33>(tmp_20_i_i_cast_fu_379_p1.read()));
}

void Loop_batch_loop_proc::thread_tmp8_cast_fu_413_p1() {
    tmp8_cast_fu_413_p1 = esl_sext<64,33>(tmp8_fu_408_p2.read());
}

void Loop_batch_loop_proc::thread_tmp8_fu_408_p2() {
    tmp8_fu_408_p2 = (!tmp_17_i_i_cast_reg_605.read().is_01() || !tmp_20_i_i_cast_fu_379_p1.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_17_i_i_cast_reg_605.read()) + sc_biguint<33>(tmp_20_i_i_cast_fu_379_p1.read()));
}

void Loop_batch_loop_proc::thread_tmp_11_i_i_mid2_fu_339_p2() {
    tmp_11_i_i_mid2_fu_339_p2 = (!tmp_11_i_i_mid2_v_fu_336_p1.read().is_01() || !p_read.read().is_01())? sc_lv<64>(): (sc_bigint<64>(tmp_11_i_i_mid2_v_fu_336_p1.read()) + sc_biguint<64>(p_read.read()));
}

void Loop_batch_loop_proc::thread_tmp_11_i_i_mid2_v_fu_336_p1() {
    tmp_11_i_i_mid2_v_fu_336_p1 = esl_sext<64,32>(tmp_11_i_i_mid2_v_v_reg_580.read());
}

void Loop_batch_loop_proc::thread_tmp_12_i_i_fu_270_p2() {
    tmp_12_i_i_fu_270_p2 = (!o_cast_i_i_fu_266_p1.read().is_01() || !num_outputs_read_reg_488.read().is_01())? sc_lv<1>(): (sc_bigint<32>(o_cast_i_i_fu_266_p1.read()) < sc_bigint<32>(num_outputs_read_reg_488.read()));
}

void Loop_batch_loop_proc::thread_tmp_13_i_i_fu_308_p1() {
    tmp_13_i_i_fu_308_p1 = esl_zext<64,31>(o_i_i_mid2_fu_286_p3.read());
}

void Loop_batch_loop_proc::thread_tmp_15_i_i_fu_317_p2() {
    tmp_15_i_i_fu_317_p2 = (!tmp_fu_312_p2.read().is_01() || !p_read3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_fu_312_p2.read()) + sc_biguint<64>(p_read3.read()));
}

void Loop_batch_loop_proc::thread_tmp_17_i_i_cast_fu_360_p1() {
    tmp_17_i_i_cast_fu_360_p1 = esl_sext<33,32>(grp_fu_351_p2.read());
}

void Loop_batch_loop_proc::thread_tmp_18_i_i_to_int_fu_428_p1() {
    tmp_18_i_i_to_int_fu_428_p1 = tmp_18_i_i_reg_196.read();
}

void Loop_batch_loop_proc::thread_tmp_19_i_i_fu_368_p2() {
    tmp_19_i_i_fu_368_p2 = (!i_cast_i_i_fu_364_p1.read().is_01() || !num_inputs_read_reg_495.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_i_i_fu_364_p1.read()) < sc_bigint<32>(num_inputs_read_reg_495.read()));
}

void Loop_batch_loop_proc::thread_tmp_1_fu_432_p4() {
    tmp_1_fu_432_p4 = tmp_18_i_i_to_int_fu_428_p1.read().range(30, 23);
}

void Loop_batch_loop_proc::thread_tmp_20_i_i_cast_fu_379_p1() {
    tmp_20_i_i_cast_fu_379_p1 = esl_zext<33,31>(i_i_i_phi_fu_211_p4.read());
}

void Loop_batch_loop_proc::thread_tmp_24_i_i_fu_397_p2() {
    tmp_24_i_i_fu_397_p2 = (!tmp6_fu_392_p2.read().is_01() || !tmp5_reg_533.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp6_fu_392_p2.read()) + sc_biguint<64>(tmp5_reg_533.read()));
}

void Loop_batch_loop_proc::thread_tmp_26_i_i_fu_417_p2() {
    tmp_26_i_i_fu_417_p2 = (!tmp8_cast_fu_413_p1.read().is_01() || !p_read3.read().is_01())? sc_lv<64>(): (sc_bigint<64>(tmp8_cast_fu_413_p1.read()) + sc_biguint<64>(p_read3.read()));
}

void Loop_batch_loop_proc::thread_tmp_2_fu_442_p1() {
    tmp_2_fu_442_p1 = tmp_18_i_i_to_int_fu_428_p1.read().range(23-1, 0);
}

void Loop_batch_loop_proc::thread_tmp_30_i_i_fu_470_p3() {
    tmp_30_i_i_fu_470_p3 = (!tmp_5_fu_464_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_464_p2.read()[0].to_bool())? tmp_18_i_i_reg_196.read(): ap_const_lv32_0);
}

void Loop_batch_loop_proc::thread_tmp_3_fu_458_p2() {
    tmp_3_fu_458_p2 = (notrhs_fu_452_p2.read() | notlhs_fu_446_p2.read());
}

void Loop_batch_loop_proc::thread_tmp_5_fu_464_p2() {
    tmp_5_fu_464_p2 = (tmp_3_fu_458_p2.read() & grp_fu_227_p2.read());
}

void Loop_batch_loop_proc::thread_tmp_9_i_i_cast_mid2_1_fu_328_p1() {
    tmp_9_i_i_cast_mid2_1_fu_328_p1 = esl_zext<32,31>(tmp_9_i_i_cast_mid2_s_reg_557.read());
}

void Loop_batch_loop_proc::thread_tmp_9_i_i_cast_mid2_fu_356_p1() {
    tmp_9_i_i_cast_mid2_fu_356_p1 = esl_sext<33,32>(grp_fu_344_p2.read());
}

void Loop_batch_loop_proc::thread_tmp_9_i_i_cast_mid2_s_fu_300_p3() {
    tmp_9_i_i_cast_mid2_s_fu_300_p3 = (!tmp_12_i_i_fu_270_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_12_i_i_fu_270_p2.read()[0].to_bool())? b_i_i_reg_174.read(): b_fu_294_p2.read());
}

void Loop_batch_loop_proc::thread_tmp_fu_312_p2() {
    tmp_fu_312_p2 = (!tmp_13_i_i_fu_308_p1.read().is_01() || !p_read2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_13_i_i_fu_308_p1.read()) + sc_biguint<64>(p_read2.read()));
}

void Loop_batch_loop_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, batch_size_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_outputs_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, num_inputs_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_275_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_mem_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_i_i_fu_368_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_i_i_fu_368_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 131072 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 262144 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 1048576 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 2097152 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 4194304 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage8_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
                ap_NS_fsm = ap_ST_fsm_state47;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && !((esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read())) || (esl_seteq<1,1,1>(p_read1.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_mem_BVALID.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state46;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state48;
            } else {
                ap_NS_fsm = ap_ST_fsm_state47;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_mem_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state49;
            } else {
                ap_NS_fsm = ap_ST_fsm_state48;
            }
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}


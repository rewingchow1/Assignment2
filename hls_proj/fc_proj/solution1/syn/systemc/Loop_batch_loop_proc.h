// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_batch_loop_proc_HH_
#define _Loop_batch_loop_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fc_layer_fadd_32ncud.h"
#include "fc_layer_fmul_32ndEe.h"
#include "fc_layer_fcmp_32neOg.h"
#include "fc_layer_mul_32nsfYi.h"
#include "fc_layer_mul_32s_g8j.h"

namespace ap_rtl {

struct Loop_batch_loop_proc : public sc_module {
    // Port declarations 66
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > batch_size_dout;
    sc_in< sc_logic > batch_size_empty_n;
    sc_out< sc_logic > batch_size_read;
    sc_in< sc_lv<32> > num_outputs_dout;
    sc_in< sc_logic > num_outputs_empty_n;
    sc_out< sc_logic > num_outputs_read;
    sc_in< sc_lv<32> > num_inputs_dout;
    sc_in< sc_logic > num_inputs_empty_n;
    sc_out< sc_logic > num_inputs_read;
    sc_in< sc_lv<64> > p_read;
    sc_out< sc_logic > m_axi_mem_AWVALID;
    sc_in< sc_logic > m_axi_mem_AWREADY;
    sc_out< sc_lv<64> > m_axi_mem_AWADDR;
    sc_out< sc_lv<1> > m_axi_mem_AWID;
    sc_out< sc_lv<32> > m_axi_mem_AWLEN;
    sc_out< sc_lv<3> > m_axi_mem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_mem_AWBURST;
    sc_out< sc_lv<2> > m_axi_mem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_mem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_mem_AWPROT;
    sc_out< sc_lv<4> > m_axi_mem_AWQOS;
    sc_out< sc_lv<4> > m_axi_mem_AWREGION;
    sc_out< sc_lv<1> > m_axi_mem_AWUSER;
    sc_out< sc_logic > m_axi_mem_WVALID;
    sc_in< sc_logic > m_axi_mem_WREADY;
    sc_out< sc_lv<32> > m_axi_mem_WDATA;
    sc_out< sc_lv<4> > m_axi_mem_WSTRB;
    sc_out< sc_logic > m_axi_mem_WLAST;
    sc_out< sc_lv<1> > m_axi_mem_WID;
    sc_out< sc_lv<1> > m_axi_mem_WUSER;
    sc_out< sc_logic > m_axi_mem_ARVALID;
    sc_in< sc_logic > m_axi_mem_ARREADY;
    sc_out< sc_lv<64> > m_axi_mem_ARADDR;
    sc_out< sc_lv<1> > m_axi_mem_ARID;
    sc_out< sc_lv<32> > m_axi_mem_ARLEN;
    sc_out< sc_lv<3> > m_axi_mem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_mem_ARBURST;
    sc_out< sc_lv<2> > m_axi_mem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_mem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_mem_ARPROT;
    sc_out< sc_lv<4> > m_axi_mem_ARQOS;
    sc_out< sc_lv<4> > m_axi_mem_ARREGION;
    sc_out< sc_lv<1> > m_axi_mem_ARUSER;
    sc_in< sc_logic > m_axi_mem_RVALID;
    sc_out< sc_logic > m_axi_mem_RREADY;
    sc_in< sc_lv<32> > m_axi_mem_RDATA;
    sc_in< sc_logic > m_axi_mem_RLAST;
    sc_in< sc_lv<1> > m_axi_mem_RID;
    sc_in< sc_lv<1> > m_axi_mem_RUSER;
    sc_in< sc_lv<2> > m_axi_mem_RRESP;
    sc_in< sc_logic > m_axi_mem_BVALID;
    sc_out< sc_logic > m_axi_mem_BREADY;
    sc_in< sc_lv<2> > m_axi_mem_BRESP;
    sc_in< sc_lv<1> > m_axi_mem_BID;
    sc_in< sc_lv<1> > m_axi_mem_BUSER;
    sc_in< sc_lv<1> > p_read1;
    sc_in< sc_lv<64> > p_read2;
    sc_in< sc_lv<64> > p_read3;
    sc_in< sc_lv<64> > p_read4;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    Loop_batch_loop_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_batch_loop_proc);

    ~Loop_batch_loop_proc();

    sc_trace_file* mVcdFile;

    fc_layer_fadd_32ncud<1,9,32,32,32>* fc_layer_fadd_32ncud_U11;
    fc_layer_fmul_32ndEe<1,5,32,32,32>* fc_layer_fmul_32ndEe_U12;
    fc_layer_fcmp_32neOg<1,2,32,32,1>* fc_layer_fcmp_32neOg_U13;
    fc_layer_mul_32nsfYi<1,3,32,32,64>* fc_layer_mul_32nsfYi_U14;
    fc_layer_mul_32s_g8j<1,3,32,31,32>* fc_layer_mul_32s_g8j_U15;
    fc_layer_mul_32s_g8j<1,3,32,31,32>* fc_layer_mul_32s_g8j_U16;
    fc_layer_mul_32s_g8j<1,3,32,31,32>* fc_layer_mul_32s_g8j_U17;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<37> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > batch_size_blk_n;
    sc_signal< sc_logic > num_outputs_blk_n;
    sc_signal< sc_logic > num_inputs_blk_n;
    sc_signal< sc_logic > mem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > mem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > mem_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > mem_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > mem_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1_flag00000000;
    sc_signal< sc_lv<1> > tmp_19_i_i_reg_610;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage8;
    sc_signal< bool > ap_block_pp0_stage8_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_lv<32> > tmp_18_i_i_reg_196;
    sc_signal< sc_lv<31> > i_i_i_reg_207;
    sc_signal< sc_lv<64> > reg_243;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_lv<32> > batch_size_read_reg_483;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > num_outputs_read_reg_488;
    sc_signal< sc_lv<32> > num_inputs_read_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp5_fu_260_p2;
    sc_signal< sc_lv<64> > tmp5_reg_533;
    sc_signal< sc_lv<64> > grp_fu_254_p2;
    sc_signal< sc_lv<64> > bound_reg_538;
    sc_signal< sc_lv<64> > indvar_flatten_next_fu_280_p2;
    sc_signal< sc_lv<64> > indvar_flatten_next_reg_546;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<31> > o_i_i_mid2_fu_286_p3;
    sc_signal< sc_lv<31> > o_i_i_mid2_reg_551;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_275_p2;
    sc_signal< sc_lv<31> > tmp_9_i_i_cast_mid2_s_fu_300_p3;
    sc_signal< sc_lv<31> > tmp_9_i_i_cast_mid2_s_reg_557;
    sc_signal< sc_lv<64> > tmp_13_i_i_fu_308_p1;
    sc_signal< sc_lv<64> > tmp_13_i_i_reg_563;
    sc_signal< sc_lv<64> > mem_addr_reg_568;
    sc_signal< sc_lv<32> > tmp_9_i_i_cast_mid2_1_fu_328_p1;
    sc_signal< sc_lv<32> > tmp_9_i_i_cast_mid2_1_reg_574;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_mem_ARREADY;
    sc_signal< sc_lv<32> > grp_fu_331_p2;
    sc_signal< sc_lv<32> > tmp_11_i_i_mid2_v_v_reg_580;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_11_i_i_mid2_fu_339_p2;
    sc_signal< sc_lv<64> > tmp_11_i_i_mid2_reg_585;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > output_element_reg_595;
    sc_signal< sc_lv<33> > tmp_9_i_i_cast_mid2_fu_356_p1;
    sc_signal< sc_lv<33> > tmp_9_i_i_cast_mid2_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<33> > tmp_17_i_i_cast_fu_360_p1;
    sc_signal< sc_lv<33> > tmp_17_i_i_cast_reg_605;
    sc_signal< sc_lv<1> > tmp_19_i_i_fu_368_p2;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_19_i_i_reg_610;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_tmp_19_i_i_reg_610;
    sc_signal< sc_lv<31> > i_fu_373_p2;
    sc_signal< sc_lv<31> > i_reg_614;
    sc_signal< sc_lv<64> > mem_addr_1_reg_619;
    sc_signal< sc_lv<64> > mem_addr_2_reg_625;
    sc_signal< sc_lv<32> > input_element_reg_631;
    sc_signal< bool > ap_block_state23_pp0_stage8_iter0;
    sc_signal< bool > ap_block_state32_pp0_stage8_iter1;
    sc_signal< bool > ap_block_pp0_stage8_flag00011001;
    sc_signal< sc_lv<32> > weight_element_reg_636;
    sc_signal< sc_lv<32> > grp_fu_223_p2;
    sc_signal< sc_lv<32> > tmp_27_i_i_reg_641;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state20_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state29_pp0_stage5_iter1;
    sc_signal< bool > ap_block_state38_pp0_stage5_iter2;
    sc_signal< bool > ap_block_pp0_stage5_flag00011001;
    sc_signal< sc_lv<32> > grp_fu_218_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > tmp_30_i_i_fu_470_p3;
    sc_signal< sc_lv<32> > tmp_30_i_i_reg_651;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_mem_AWREADY;
    sc_signal< sc_lv<31> > o_fu_478_p2;
    sc_signal< bool > ap_block_state46;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state15;
    sc_signal< bool > ap_block_pp0_stage8_flag00011011;
    sc_signal< bool > ap_block_pp0_stage5_flag00011011;
    sc_signal< sc_lv<64> > indvar_flatten_reg_163;
    sc_signal< sc_lv<31> > b_i_i_reg_174;
    sc_signal< sc_lv<31> > o_i_i_reg_185;
    sc_signal< sc_lv<31> > i_i_i_phi_fu_211_p4;
    sc_signal< sc_lv<64> > grp_fu_233_p2;
    sc_signal< sc_lv<64> > tmp_15_i_i_fu_317_p2;
    sc_signal< sc_lv<64> > tmp_24_i_i_fu_397_p2;
    sc_signal< sc_lv<64> > tmp_26_i_i_fu_417_p2;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_mem_ARREADY;
    sc_signal< bool > ap_block_state16_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state25_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state34_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_flag00001001;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_pp0_stage1_flag00011001;
    sc_signal< bool > ap_block_state17_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state26_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state35_pp0_stage2_iter2;
    sc_signal< bool > ap_block_pp0_stage2_flag00001001;
    sc_signal< bool > ap_block_state17_io;
    sc_signal< bool > ap_block_pp0_stage2_flag00011001;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_mem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_mem_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_mem_WREADY;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage6_flag00000000;
    sc_signal< sc_lv<32> > grp_fu_254_p0;
    sc_signal< sc_lv<32> > grp_fu_254_p1;
    sc_signal< sc_lv<32> > o_cast_i_i_fu_266_p1;
    sc_signal< sc_lv<1> > tmp_12_i_i_fu_270_p2;
    sc_signal< sc_lv<31> > b_fu_294_p2;
    sc_signal< sc_lv<64> > tmp_fu_312_p2;
    sc_signal< sc_lv<31> > grp_fu_331_p1;
    sc_signal< sc_lv<64> > tmp_11_i_i_mid2_v_fu_336_p1;
    sc_signal< sc_lv<31> > grp_fu_344_p1;
    sc_signal< sc_lv<31> > grp_fu_351_p1;
    sc_signal< sc_lv<32> > grp_fu_344_p2;
    sc_signal< sc_lv<32> > grp_fu_351_p2;
    sc_signal< sc_lv<32> > i_cast_i_i_fu_364_p1;
    sc_signal< sc_lv<33> > tmp_20_i_i_cast_fu_379_p1;
    sc_signal< sc_lv<33> > tmp7_fu_383_p2;
    sc_signal< sc_lv<64> > tmp7_cast_fu_388_p1;
    sc_signal< sc_lv<64> > tmp6_fu_392_p2;
    sc_signal< sc_lv<33> > tmp8_fu_408_p2;
    sc_signal< sc_lv<64> > tmp8_cast_fu_413_p1;
    sc_signal< sc_lv<32> > tmp_18_i_i_to_int_fu_428_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_432_p4;
    sc_signal< sc_lv<23> > tmp_2_fu_442_p1;
    sc_signal< sc_lv<1> > notrhs_fu_452_p2;
    sc_signal< sc_lv<1> > notlhs_fu_446_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_458_p2;
    sc_signal< sc_lv<1> > grp_fu_227_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_464_p2;
    sc_signal< sc_logic > grp_fu_218_ce;
    sc_signal< bool > ap_block_state21_pp0_stage6_iter0;
    sc_signal< bool > ap_block_state30_pp0_stage6_iter1;
    sc_signal< bool > ap_block_pp0_stage6_flag00011001;
    sc_signal< bool > ap_block_state22_pp0_stage7_iter0;
    sc_signal< bool > ap_block_state31_pp0_stage7_iter1;
    sc_signal< bool > ap_block_pp0_stage7_flag00011001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state18_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state27_pp0_stage3_iter1;
    sc_signal< bool > ap_block_state36_pp0_stage3_iter2;
    sc_signal< bool > ap_block_pp0_stage3_flag00011001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state19_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state28_pp0_stage4_iter1;
    sc_signal< bool > ap_block_state37_pp0_stage4_iter2;
    sc_signal< bool > ap_block_pp0_stage4_flag00011001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< sc_logic > grp_fu_223_ce;
    sc_signal< sc_logic > grp_fu_227_ce;
    sc_signal< sc_logic > grp_fu_331_ce;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_fu_344_ce;
    sc_signal< sc_logic > grp_fu_351_ce;
    sc_signal< sc_lv<37> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_flag00011011;
    sc_signal< bool > ap_block_pp0_stage2_flag00011011;
    sc_signal< bool > ap_block_pp0_stage3_flag00011011;
    sc_signal< bool > ap_block_pp0_stage4_flag00011011;
    sc_signal< bool > ap_block_pp0_stage6_flag00011011;
    sc_signal< bool > ap_block_pp0_stage7_flag00011011;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > grp_fu_254_p00;
    sc_signal< sc_lv<64> > grp_fu_254_p10;
    sc_signal< sc_lv<32> > grp_fu_331_p10;
    sc_signal< sc_lv<32> > grp_fu_351_p10;
    sc_signal< bool > ap_condition_477;
    sc_signal< bool > ap_condition_499;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<37> ap_ST_fsm_state1;
    static const sc_lv<37> ap_ST_fsm_state2;
    static const sc_lv<37> ap_ST_fsm_state3;
    static const sc_lv<37> ap_ST_fsm_state4;
    static const sc_lv<37> ap_ST_fsm_state5;
    static const sc_lv<37> ap_ST_fsm_state6;
    static const sc_lv<37> ap_ST_fsm_state7;
    static const sc_lv<37> ap_ST_fsm_state8;
    static const sc_lv<37> ap_ST_fsm_state9;
    static const sc_lv<37> ap_ST_fsm_state10;
    static const sc_lv<37> ap_ST_fsm_state11;
    static const sc_lv<37> ap_ST_fsm_state12;
    static const sc_lv<37> ap_ST_fsm_state13;
    static const sc_lv<37> ap_ST_fsm_state14;
    static const sc_lv<37> ap_ST_fsm_pp0_stage0;
    static const sc_lv<37> ap_ST_fsm_pp0_stage1;
    static const sc_lv<37> ap_ST_fsm_pp0_stage2;
    static const sc_lv<37> ap_ST_fsm_pp0_stage3;
    static const sc_lv<37> ap_ST_fsm_pp0_stage4;
    static const sc_lv<37> ap_ST_fsm_pp0_stage5;
    static const sc_lv<37> ap_ST_fsm_pp0_stage6;
    static const sc_lv<37> ap_ST_fsm_pp0_stage7;
    static const sc_lv<37> ap_ST_fsm_pp0_stage8;
    static const sc_lv<37> ap_ST_fsm_state39;
    static const sc_lv<37> ap_ST_fsm_state40;
    static const sc_lv<37> ap_ST_fsm_state41;
    static const sc_lv<37> ap_ST_fsm_state42;
    static const sc_lv<37> ap_ST_fsm_state43;
    static const sc_lv<37> ap_ST_fsm_state44;
    static const sc_lv<37> ap_ST_fsm_state45;
    static const sc_lv<37> ap_ST_fsm_state46;
    static const sc_lv<37> ap_ST_fsm_state47;
    static const sc_lv<37> ap_ST_fsm_state48;
    static const sc_lv<37> ap_ST_fsm_state49;
    static const sc_lv<37> ap_ST_fsm_state50;
    static const sc_lv<37> ap_ST_fsm_state51;
    static const sc_lv<37> ap_ST_fsm_state52;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp0_stage8();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_pp0_stage1_flag00000000();
    void thread_ap_block_pp0_stage1_flag00001001();
    void thread_ap_block_pp0_stage1_flag00011001();
    void thread_ap_block_pp0_stage1_flag00011011();
    void thread_ap_block_pp0_stage2_flag00000000();
    void thread_ap_block_pp0_stage2_flag00001001();
    void thread_ap_block_pp0_stage2_flag00011001();
    void thread_ap_block_pp0_stage2_flag00011011();
    void thread_ap_block_pp0_stage3_flag00011001();
    void thread_ap_block_pp0_stage3_flag00011011();
    void thread_ap_block_pp0_stage4_flag00011001();
    void thread_ap_block_pp0_stage4_flag00011011();
    void thread_ap_block_pp0_stage5_flag00011001();
    void thread_ap_block_pp0_stage5_flag00011011();
    void thread_ap_block_pp0_stage6_flag00000000();
    void thread_ap_block_pp0_stage6_flag00011001();
    void thread_ap_block_pp0_stage6_flag00011011();
    void thread_ap_block_pp0_stage7_flag00011001();
    void thread_ap_block_pp0_stage7_flag00011011();
    void thread_ap_block_pp0_stage8_flag00000000();
    void thread_ap_block_pp0_stage8_flag00011001();
    void thread_ap_block_pp0_stage8_flag00011011();
    void thread_ap_block_state1();
    void thread_ap_block_state15_pp0_stage0_iter0();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp0_stage1_iter0();
    void thread_ap_block_state17_io();
    void thread_ap_block_state17_pp0_stage2_iter0();
    void thread_ap_block_state18_pp0_stage3_iter0();
    void thread_ap_block_state19_pp0_stage4_iter0();
    void thread_ap_block_state20_pp0_stage5_iter0();
    void thread_ap_block_state21_pp0_stage6_iter0();
    void thread_ap_block_state22_pp0_stage7_iter0();
    void thread_ap_block_state23_pp0_stage8_iter0();
    void thread_ap_block_state24_pp0_stage0_iter1();
    void thread_ap_block_state25_pp0_stage1_iter1();
    void thread_ap_block_state26_pp0_stage2_iter1();
    void thread_ap_block_state27_pp0_stage3_iter1();
    void thread_ap_block_state28_pp0_stage4_iter1();
    void thread_ap_block_state29_pp0_stage5_iter1();
    void thread_ap_block_state30_pp0_stage6_iter1();
    void thread_ap_block_state31_pp0_stage7_iter1();
    void thread_ap_block_state32_pp0_stage8_iter1();
    void thread_ap_block_state33_pp0_stage0_iter2();
    void thread_ap_block_state34_pp0_stage1_iter2();
    void thread_ap_block_state35_pp0_stage2_iter2();
    void thread_ap_block_state36_pp0_stage3_iter2();
    void thread_ap_block_state37_pp0_stage4_iter2();
    void thread_ap_block_state38_pp0_stage5_iter2();
    void thread_ap_block_state46();
    void thread_ap_condition_477();
    void thread_ap_condition_499();
    void thread_ap_condition_pp0_exit_iter0_state15();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_mem_ARREADY();
    void thread_ap_sig_ioackin_m_axi_mem_AWREADY();
    void thread_ap_sig_ioackin_m_axi_mem_WREADY();
    void thread_b_fu_294_p2();
    void thread_batch_size_blk_n();
    void thread_batch_size_read();
    void thread_exitcond_flatten_fu_275_p2();
    void thread_grp_fu_218_ce();
    void thread_grp_fu_223_ce();
    void thread_grp_fu_227_ce();
    void thread_grp_fu_233_p2();
    void thread_grp_fu_254_p0();
    void thread_grp_fu_254_p00();
    void thread_grp_fu_254_p1();
    void thread_grp_fu_254_p10();
    void thread_grp_fu_331_ce();
    void thread_grp_fu_331_p1();
    void thread_grp_fu_331_p10();
    void thread_grp_fu_344_ce();
    void thread_grp_fu_344_p1();
    void thread_grp_fu_351_ce();
    void thread_grp_fu_351_p1();
    void thread_grp_fu_351_p10();
    void thread_i_cast_i_i_fu_364_p1();
    void thread_i_fu_373_p2();
    void thread_i_i_i_phi_fu_211_p4();
    void thread_indvar_flatten_next_fu_280_p2();
    void thread_m_axi_mem_ARADDR();
    void thread_m_axi_mem_ARBURST();
    void thread_m_axi_mem_ARCACHE();
    void thread_m_axi_mem_ARID();
    void thread_m_axi_mem_ARLEN();
    void thread_m_axi_mem_ARLOCK();
    void thread_m_axi_mem_ARPROT();
    void thread_m_axi_mem_ARQOS();
    void thread_m_axi_mem_ARREGION();
    void thread_m_axi_mem_ARSIZE();
    void thread_m_axi_mem_ARUSER();
    void thread_m_axi_mem_ARVALID();
    void thread_m_axi_mem_AWADDR();
    void thread_m_axi_mem_AWBURST();
    void thread_m_axi_mem_AWCACHE();
    void thread_m_axi_mem_AWID();
    void thread_m_axi_mem_AWLEN();
    void thread_m_axi_mem_AWLOCK();
    void thread_m_axi_mem_AWPROT();
    void thread_m_axi_mem_AWQOS();
    void thread_m_axi_mem_AWREGION();
    void thread_m_axi_mem_AWSIZE();
    void thread_m_axi_mem_AWUSER();
    void thread_m_axi_mem_AWVALID();
    void thread_m_axi_mem_BREADY();
    void thread_m_axi_mem_RREADY();
    void thread_m_axi_mem_WDATA();
    void thread_m_axi_mem_WID();
    void thread_m_axi_mem_WLAST();
    void thread_m_axi_mem_WSTRB();
    void thread_m_axi_mem_WUSER();
    void thread_m_axi_mem_WVALID();
    void thread_mem_blk_n_AR();
    void thread_mem_blk_n_AW();
    void thread_mem_blk_n_B();
    void thread_mem_blk_n_R();
    void thread_mem_blk_n_W();
    void thread_notlhs_fu_446_p2();
    void thread_notrhs_fu_452_p2();
    void thread_num_inputs_blk_n();
    void thread_num_inputs_read();
    void thread_num_outputs_blk_n();
    void thread_num_outputs_read();
    void thread_o_cast_i_i_fu_266_p1();
    void thread_o_fu_478_p2();
    void thread_o_i_i_mid2_fu_286_p3();
    void thread_tmp5_fu_260_p2();
    void thread_tmp6_fu_392_p2();
    void thread_tmp7_cast_fu_388_p1();
    void thread_tmp7_fu_383_p2();
    void thread_tmp8_cast_fu_413_p1();
    void thread_tmp8_fu_408_p2();
    void thread_tmp_11_i_i_mid2_fu_339_p2();
    void thread_tmp_11_i_i_mid2_v_fu_336_p1();
    void thread_tmp_12_i_i_fu_270_p2();
    void thread_tmp_13_i_i_fu_308_p1();
    void thread_tmp_15_i_i_fu_317_p2();
    void thread_tmp_17_i_i_cast_fu_360_p1();
    void thread_tmp_18_i_i_to_int_fu_428_p1();
    void thread_tmp_19_i_i_fu_368_p2();
    void thread_tmp_1_fu_432_p4();
    void thread_tmp_20_i_i_cast_fu_379_p1();
    void thread_tmp_24_i_i_fu_397_p2();
    void thread_tmp_26_i_i_fu_417_p2();
    void thread_tmp_2_fu_442_p1();
    void thread_tmp_30_i_i_fu_470_p3();
    void thread_tmp_3_fu_458_p2();
    void thread_tmp_5_fu_464_p2();
    void thread_tmp_9_i_i_cast_mid2_1_fu_328_p1();
    void thread_tmp_9_i_i_cast_mid2_fu_356_p1();
    void thread_tmp_9_i_i_cast_mid2_s_fu_300_p3();
    void thread_tmp_fu_312_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

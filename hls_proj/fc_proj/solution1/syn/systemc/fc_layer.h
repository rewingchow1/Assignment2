// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc_layer_HH_
#define _fc_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fc_layer_fadd_32nbkb.h"
#include "fc_layer_fmul_32ncud.h"
#include "fc_layer_fcmp_32ndEe.h"
#include "fc_layer_mul_32s_eOg.h"
#include "fc_layer_CTRL_BUS_s_axi.h"
#include "fc_layer_mem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_MEM_ADDR_WIDTH = 64,
         unsigned int C_M_AXI_MEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_MEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_MEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct fc_layer : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_mem_AWVALID;
    sc_in< sc_logic > m_axi_mem_AWREADY;
    sc_out< sc_uint<C_M_AXI_MEM_ADDR_WIDTH> > m_axi_mem_AWADDR;
    sc_out< sc_uint<C_M_AXI_MEM_ID_WIDTH> > m_axi_mem_AWID;
    sc_out< sc_lv<8> > m_axi_mem_AWLEN;
    sc_out< sc_lv<3> > m_axi_mem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_mem_AWBURST;
    sc_out< sc_lv<2> > m_axi_mem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_mem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_mem_AWPROT;
    sc_out< sc_lv<4> > m_axi_mem_AWQOS;
    sc_out< sc_lv<4> > m_axi_mem_AWREGION;
    sc_out< sc_uint<C_M_AXI_MEM_AWUSER_WIDTH> > m_axi_mem_AWUSER;
    sc_out< sc_logic > m_axi_mem_WVALID;
    sc_in< sc_logic > m_axi_mem_WREADY;
    sc_out< sc_uint<C_M_AXI_MEM_DATA_WIDTH> > m_axi_mem_WDATA;
    sc_out< sc_uint<C_M_AXI_MEM_DATA_WIDTH/8> > m_axi_mem_WSTRB;
    sc_out< sc_logic > m_axi_mem_WLAST;
    sc_out< sc_uint<C_M_AXI_MEM_ID_WIDTH> > m_axi_mem_WID;
    sc_out< sc_uint<C_M_AXI_MEM_WUSER_WIDTH> > m_axi_mem_WUSER;
    sc_out< sc_logic > m_axi_mem_ARVALID;
    sc_in< sc_logic > m_axi_mem_ARREADY;
    sc_out< sc_uint<C_M_AXI_MEM_ADDR_WIDTH> > m_axi_mem_ARADDR;
    sc_out< sc_uint<C_M_AXI_MEM_ID_WIDTH> > m_axi_mem_ARID;
    sc_out< sc_lv<8> > m_axi_mem_ARLEN;
    sc_out< sc_lv<3> > m_axi_mem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_mem_ARBURST;
    sc_out< sc_lv<2> > m_axi_mem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_mem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_mem_ARPROT;
    sc_out< sc_lv<4> > m_axi_mem_ARQOS;
    sc_out< sc_lv<4> > m_axi_mem_ARREGION;
    sc_out< sc_uint<C_M_AXI_MEM_ARUSER_WIDTH> > m_axi_mem_ARUSER;
    sc_in< sc_logic > m_axi_mem_RVALID;
    sc_out< sc_logic > m_axi_mem_RREADY;
    sc_in< sc_uint<C_M_AXI_MEM_DATA_WIDTH> > m_axi_mem_RDATA;
    sc_in< sc_logic > m_axi_mem_RLAST;
    sc_in< sc_uint<C_M_AXI_MEM_ID_WIDTH> > m_axi_mem_RID;
    sc_in< sc_uint<C_M_AXI_MEM_RUSER_WIDTH> > m_axi_mem_RUSER;
    sc_in< sc_lv<2> > m_axi_mem_RRESP;
    sc_in< sc_logic > m_axi_mem_BVALID;
    sc_out< sc_logic > m_axi_mem_BREADY;
    sc_in< sc_lv<2> > m_axi_mem_BRESP;
    sc_in< sc_uint<C_M_AXI_MEM_ID_WIDTH> > m_axi_mem_BID;
    sc_in< sc_uint<C_M_AXI_MEM_BUSER_WIDTH> > m_axi_mem_BUSER;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const8;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const7;
    sc_signal< sc_lv<5> > ap_var_for_const9;


    // Module declarations
    fc_layer(sc_module_name name);
    SC_HAS_PROCESS(fc_layer);

    ~fc_layer();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fc_layer_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* fc_layer_CTRL_BUS_s_axi_U;
    fc_layer_mem_m_axi<32,64,5,16,16,16,16,C_M_AXI_MEM_ID_WIDTH,C_M_AXI_MEM_ADDR_WIDTH,C_M_AXI_MEM_DATA_WIDTH,C_M_AXI_MEM_AWUSER_WIDTH,C_M_AXI_MEM_ARUSER_WIDTH,C_M_AXI_MEM_WUSER_WIDTH,C_M_AXI_MEM_RUSER_WIDTH,C_M_AXI_MEM_BUSER_WIDTH,C_M_AXI_MEM_TARGET_ADDR,C_M_AXI_MEM_USER_VALUE,C_M_AXI_MEM_PROT_VALUE,C_M_AXI_MEM_CACHE_VALUE>* fc_layer_mem_m_axi_U;
    fc_layer_fadd_32nbkb<1,9,32,32,32>* fc_layer_fadd_32nbkb_U1;
    fc_layer_fmul_32ncud<1,5,32,32,32>* fc_layer_fmul_32ncud_U2;
    fc_layer_fcmp_32ndEe<1,2,32,32,1>* fc_layer_fcmp_32ndEe_U3;
    fc_layer_mul_32s_eOg<1,3,32,32,32>* fc_layer_mul_32s_eOg_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<53> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_offset;
    sc_signal< sc_lv<32> > output_offset;
    sc_signal< sc_lv<32> > batch_size;
    sc_signal< sc_lv<32> > num_inputs;
    sc_signal< sc_lv<32> > num_outputs;
    sc_signal< sc_lv<32> > enable_relu;
    sc_signal< sc_logic > mem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > mem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > mem_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > mem_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > mem_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<1> > tmp_4_reg_555;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > mem_AWVALID;
    sc_signal< sc_logic > mem_AWREADY;
    sc_signal< sc_logic > mem_WVALID;
    sc_signal< sc_logic > mem_WREADY;
    sc_signal< sc_lv<32> > mem_WDATA;
    sc_signal< sc_logic > mem_ARVALID;
    sc_signal< sc_logic > mem_ARREADY;
    sc_signal< sc_lv<64> > mem_ARADDR;
    sc_signal< sc_logic > mem_RVALID;
    sc_signal< sc_logic > mem_RREADY;
    sc_signal< sc_lv<32> > mem_RDATA;
    sc_signal< sc_logic > mem_RLAST;
    sc_signal< sc_lv<1> > mem_RID;
    sc_signal< sc_lv<1> > mem_RUSER;
    sc_signal< sc_lv<2> > mem_RRESP;
    sc_signal< sc_logic > mem_BVALID;
    sc_signal< sc_logic > mem_BREADY;
    sc_signal< sc_lv<2> > mem_BRESP;
    sc_signal< sc_lv<1> > mem_BID;
    sc_signal< sc_lv<1> > mem_BUSER;
    sc_signal< sc_lv<64> > reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > tmp_17_fu_415_p2;
    sc_signal< sc_lv<32> > num_outputs_read_reg_529;
    sc_signal< sc_lv<32> > num_inputs_read_reg_537;
    sc_signal< sc_lv<32> > batch_size_read_reg_545;
    sc_signal< sc_lv<30> > tmp_5_reg_550;
    sc_signal< sc_lv<1> > tmp_4_fu_272_p2;
    sc_signal< sc_lv<30> > tmp_9_reg_559;
    sc_signal< sc_lv<32> > grp_fu_288_p2;
    sc_signal< sc_lv<32> > num_weights_reg_564;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_1_fu_295_p1;
    sc_signal< sc_lv<64> > tmp_1_reg_570;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<33> > tmp_2_cast_fu_302_p1;
    sc_signal< sc_lv<33> > tmp_2_cast_reg_576;
    sc_signal< sc_lv<33> > tmp_3_cast_fu_305_p1;
    sc_signal< sc_lv<33> > tmp_3_cast_reg_581;
    sc_signal< sc_lv<64> > tmp_6_fu_311_p1;
    sc_signal< sc_lv<64> > tmp_6_reg_586;
    sc_signal< sc_lv<64> > tmp2_fu_315_p2;
    sc_signal< sc_lv<64> > tmp2_reg_591;
    sc_signal< sc_lv<32> > next_mul4_fu_321_p2;
    sc_signal< sc_lv<32> > next_mul4_reg_596;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > next_mul2_fu_326_p2;
    sc_signal< sc_lv<32> > next_mul2_reg_601;
    sc_signal< sc_lv<31> > b_1_fu_340_p2;
    sc_signal< sc_lv<31> > b_1_reg_609;
    sc_signal< sc_lv<34> > tmp_9_cast_fu_346_p1;
    sc_signal< sc_lv<34> > tmp_9_cast_reg_614;
    sc_signal< sc_lv<1> > tmp_7_fu_335_p2;
    sc_signal< sc_lv<64> > tmp_11_fu_354_p2;
    sc_signal< sc_lv<64> > tmp_11_reg_619;
    sc_signal< sc_lv<32> > next_mul_fu_359_p2;
    sc_signal< sc_lv<32> > next_mul_reg_624;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<31> > o_1_fu_373_p2;
    sc_signal< sc_lv<31> > o_1_reg_632;
    sc_signal< sc_lv<64> > mem_addr_reg_637;
    sc_signal< sc_lv<1> > tmp_12_fu_368_p2;
    sc_signal< sc_lv<32> > output_element_reg_643;
    sc_signal< sc_lv<64> > tmp_13_fu_403_p1;
    sc_signal< sc_lv<64> > tmp_13_reg_648;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<33> > tmp_17_cast_fu_407_p1;
    sc_signal< sc_lv<33> > tmp_17_cast_reg_653;
    sc_signal< sc_lv<31> > i_1_fu_420_p2;
    sc_signal< sc_lv<31> > i_1_reg_661;
    sc_signal< sc_lv<64> > mem_addr_1_reg_666;
    sc_signal< sc_lv<64> > mem_addr_2_reg_672;
    sc_signal< sc_lv<32> > input_element_reg_678;
    sc_signal< sc_lv<32> > weight_element_reg_683;
    sc_signal< sc_lv<32> > grp_fu_237_p2;
    sc_signal< sc_lv<32> > tmp_21_reg_688;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<32> > grp_fu_232_p2;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_lv<32> > tmp_27_fu_521_p3;
    sc_signal< sc_lv<32> > tmp_27_reg_698;
    sc_signal< sc_logic > ap_sig_ioackin_mem_AWREADY;
    sc_signal< sc_lv<31> > b_reg_153;
    sc_signal< sc_lv<32> > phi_mul1_reg_164;
    sc_signal< sc_lv<32> > phi_mul3_reg_175;
    sc_signal< sc_lv<31> > o_reg_186;
    sc_signal< bool > ap_block_state47;
    sc_signal< sc_lv<32> > phi_mul_reg_198;
    sc_signal< sc_lv<32> > tmp_16_reg_210;
    sc_signal< sc_lv<31> > i_reg_221;
    sc_signal< sc_lv<64> > grp_fu_247_p2;
    sc_signal< sc_lv<64> > tmp_15_fu_392_p2;
    sc_signal< sc_lv<64> > tmp_19_fu_448_p2;
    sc_signal< sc_lv<64> > tmp_20_fu_468_p2;
    sc_signal< sc_logic > ap_reg_ioackin_mem_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_mem_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_mem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_mem_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_mem_WREADY;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<62> > tmp_3_fu_292_p1;
    sc_signal< sc_lv<62> > tmp_s_fu_308_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_299_p1;
    sc_signal< sc_lv<32> > b_cast_fu_331_p1;
    sc_signal< sc_lv<64> > tmp_10_fu_350_p1;
    sc_signal< sc_lv<32> > o_cast_fu_364_p1;
    sc_signal< sc_lv<33> > tmp_13_cast_fu_379_p1;
    sc_signal< sc_lv<33> > tmp1_fu_383_p2;
    sc_signal< sc_lv<64> > tmp1_cast_fu_388_p1;
    sc_signal< sc_lv<32> > i_cast_fu_411_p1;
    sc_signal< sc_lv<33> > tmp_20_cast_fu_426_p1;
    sc_signal< sc_lv<33> > tmp4_fu_430_p2;
    sc_signal< sc_lv<34> > tmp4_cast_fu_435_p1;
    sc_signal< sc_lv<34> > tmp3_fu_439_p2;
    sc_signal< sc_lv<64> > tmp3_cast_fu_444_p1;
    sc_signal< sc_lv<33> > tmp5_fu_459_p2;
    sc_signal< sc_lv<64> > tmp5_cast_fu_464_p1;
    sc_signal< sc_lv<32> > tmp_18_to_int_fu_479_p1;
    sc_signal< sc_lv<8> > tmp_23_fu_483_p4;
    sc_signal< sc_lv<23> > tmp_fu_493_p1;
    sc_signal< sc_lv<1> > notrhs_fu_503_p2;
    sc_signal< sc_lv<1> > notlhs_fu_497_p2;
    sc_signal< sc_lv<1> > tmp_24_fu_509_p2;
    sc_signal< sc_lv<1> > grp_fu_241_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_515_p2;
    sc_signal< sc_logic > grp_fu_241_ce;
    sc_signal< bool > ap_predicate_op154_fcmp_state17;
    sc_signal< sc_lv<53> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<53> ap_ST_fsm_state1;
    static const sc_lv<53> ap_ST_fsm_state2;
    static const sc_lv<53> ap_ST_fsm_state3;
    static const sc_lv<53> ap_ST_fsm_state4;
    static const sc_lv<53> ap_ST_fsm_state5;
    static const sc_lv<53> ap_ST_fsm_state6;
    static const sc_lv<53> ap_ST_fsm_state7;
    static const sc_lv<53> ap_ST_fsm_state8;
    static const sc_lv<53> ap_ST_fsm_state9;
    static const sc_lv<53> ap_ST_fsm_state10;
    static const sc_lv<53> ap_ST_fsm_state11;
    static const sc_lv<53> ap_ST_fsm_state12;
    static const sc_lv<53> ap_ST_fsm_state13;
    static const sc_lv<53> ap_ST_fsm_state14;
    static const sc_lv<53> ap_ST_fsm_state15;
    static const sc_lv<53> ap_ST_fsm_state16;
    static const sc_lv<53> ap_ST_fsm_state17;
    static const sc_lv<53> ap_ST_fsm_state18;
    static const sc_lv<53> ap_ST_fsm_state19;
    static const sc_lv<53> ap_ST_fsm_state20;
    static const sc_lv<53> ap_ST_fsm_state21;
    static const sc_lv<53> ap_ST_fsm_state22;
    static const sc_lv<53> ap_ST_fsm_state23;
    static const sc_lv<53> ap_ST_fsm_state24;
    static const sc_lv<53> ap_ST_fsm_state25;
    static const sc_lv<53> ap_ST_fsm_state26;
    static const sc_lv<53> ap_ST_fsm_state27;
    static const sc_lv<53> ap_ST_fsm_state28;
    static const sc_lv<53> ap_ST_fsm_state29;
    static const sc_lv<53> ap_ST_fsm_state30;
    static const sc_lv<53> ap_ST_fsm_state31;
    static const sc_lv<53> ap_ST_fsm_state32;
    static const sc_lv<53> ap_ST_fsm_state33;
    static const sc_lv<53> ap_ST_fsm_state34;
    static const sc_lv<53> ap_ST_fsm_state35;
    static const sc_lv<53> ap_ST_fsm_state36;
    static const sc_lv<53> ap_ST_fsm_state37;
    static const sc_lv<53> ap_ST_fsm_state38;
    static const sc_lv<53> ap_ST_fsm_state39;
    static const sc_lv<53> ap_ST_fsm_state40;
    static const sc_lv<53> ap_ST_fsm_state41;
    static const sc_lv<53> ap_ST_fsm_state42;
    static const sc_lv<53> ap_ST_fsm_state43;
    static const sc_lv<53> ap_ST_fsm_state44;
    static const sc_lv<53> ap_ST_fsm_state45;
    static const sc_lv<53> ap_ST_fsm_state46;
    static const sc_lv<53> ap_ST_fsm_state47;
    static const sc_lv<53> ap_ST_fsm_state48;
    static const sc_lv<53> ap_ST_fsm_state49;
    static const sc_lv<53> ap_ST_fsm_state50;
    static const sc_lv<53> ap_ST_fsm_state51;
    static const sc_lv<53> ap_ST_fsm_state52;
    static const sc_lv<53> ap_ST_fsm_state53;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_MEM_TARGET_ADDR;
    static const int C_M_AXI_MEM_USER_VALUE;
    static const int C_M_AXI_MEM_PROT_VALUE;
    static const int C_M_AXI_MEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const9();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state47();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op154_fcmp_state17();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_mem_ARREADY();
    void thread_ap_sig_ioackin_mem_AWREADY();
    void thread_ap_sig_ioackin_mem_WREADY();
    void thread_b_1_fu_340_p2();
    void thread_b_cast_fu_331_p1();
    void thread_grp_fu_241_ce();
    void thread_grp_fu_247_p2();
    void thread_i_1_fu_420_p2();
    void thread_i_cast_fu_411_p1();
    void thread_mem_ARADDR();
    void thread_mem_ARVALID();
    void thread_mem_AWVALID();
    void thread_mem_BREADY();
    void thread_mem_RREADY();
    void thread_mem_WDATA();
    void thread_mem_WVALID();
    void thread_mem_blk_n_AR();
    void thread_mem_blk_n_AW();
    void thread_mem_blk_n_B();
    void thread_mem_blk_n_R();
    void thread_mem_blk_n_W();
    void thread_next_mul2_fu_326_p2();
    void thread_next_mul4_fu_321_p2();
    void thread_next_mul_fu_359_p2();
    void thread_notlhs_fu_497_p2();
    void thread_notrhs_fu_503_p2();
    void thread_o_1_fu_373_p2();
    void thread_o_cast_fu_364_p1();
    void thread_tmp1_cast_fu_388_p1();
    void thread_tmp1_fu_383_p2();
    void thread_tmp2_fu_315_p2();
    void thread_tmp3_cast_fu_444_p1();
    void thread_tmp3_fu_439_p2();
    void thread_tmp4_cast_fu_435_p1();
    void thread_tmp4_fu_430_p2();
    void thread_tmp5_cast_fu_464_p1();
    void thread_tmp5_fu_459_p2();
    void thread_tmp_10_fu_350_p1();
    void thread_tmp_11_fu_354_p2();
    void thread_tmp_12_fu_368_p2();
    void thread_tmp_13_cast_fu_379_p1();
    void thread_tmp_13_fu_403_p1();
    void thread_tmp_15_fu_392_p2();
    void thread_tmp_17_cast_fu_407_p1();
    void thread_tmp_17_fu_415_p2();
    void thread_tmp_18_to_int_fu_479_p1();
    void thread_tmp_19_fu_448_p2();
    void thread_tmp_1_fu_295_p1();
    void thread_tmp_20_cast_fu_426_p1();
    void thread_tmp_20_fu_468_p2();
    void thread_tmp_23_fu_483_p4();
    void thread_tmp_24_fu_509_p2();
    void thread_tmp_26_fu_515_p2();
    void thread_tmp_27_fu_521_p3();
    void thread_tmp_2_cast_fu_302_p1();
    void thread_tmp_2_fu_299_p1();
    void thread_tmp_3_cast_fu_305_p1();
    void thread_tmp_3_fu_292_p1();
    void thread_tmp_4_fu_272_p2();
    void thread_tmp_6_fu_311_p1();
    void thread_tmp_7_fu_335_p2();
    void thread_tmp_9_cast_fu_346_p1();
    void thread_tmp_fu_493_p1();
    void thread_tmp_s_fu_308_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
